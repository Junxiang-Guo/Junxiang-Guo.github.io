{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[{"title":"文章归档","date":"2022-04-07T05:35:28.720Z","updated":"2022-04-07T05:35:28.720Z","comments":true,"path":"新建文本文档.html","permalink":"http://example.com/%E6%96%B0%E5%BB%BA%E6%96%87%E6%9C%AC%E6%96%87%E6%A1%A3.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"Python图解","date":"2022-04-07T05:01:24.616Z","updated":"2022-04-03T09:40:28.216Z","comments":true,"path":"2022/04/07/Python图解/","link":"","permalink":"http://example.com/2022/04/07/Python%E5%9B%BE%E8%A7%A3/","excerpt":"","text":"Python图解1.0第一章-出使Python国1.1输出函数print 1234567891011121314151617181920# 开发时间:2022/3/15 23:22#可以输出数字print(520)print(98.5)#可以输出字符串print(&#x27;helloworld&#x27;)print(&quot;helloworld&quot;)#含有运算符的表达式print(3+1)#将数据输出文件中, 注意点: 1.所指定的盘符要存在， 2.使用file= fpfp=open(&#x27;D:/text.txt&#x27;,&#x27;a+&#x27;) #a+如果文件不存在就创建， 存在就在文件内容的后面继续追加print(&#x27;helloworld&#x27;,file=fp)fp.close()#不进行换行输出（输出内容在一行当中)print(&#x27;hello&#x27;,&#x27;world&#x27;,&#x27;python&#x27;) 1.2转义字符与原字符 2.0第二章-七十二变2.1二进制与字符编码 8bit -&gt; 1byte 1024byte -&gt; 1KB(千) 1024KB -&gt; 1MB(兆) 1024MB -&gt; 1GB(吉) 1024G -&gt; 1TB(太) 8位 256种状态 –&gt; ASCII表 128种状态 123# 开发时间:2022/3/17 10:51print(chr(0b100111001011000))print(ord(&#x27;乘&#x27;)) 2.2Python中的标识符与保留字 查看保留字有哪些。 123# 开发时间:2022/3/17 10:56import keywordprint(keyword.kwlist) 2.3Python中的变量与数据类型 1234567# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03name=&#x27;玛利亚&#x27;print(name)print(&#x27;标识&#x27;,id(name))print(&#x27;类型&#x27;,type(name))print(&#x27;值&#x27;,name) 1234567# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03name=&#x27;玛利亚&#x27;#print(name)name=&#x27;楚溜冰&#x27;print(name) 12345678910111213141516# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03#整数类型#可以表示：正数，负数，0n1=90n2=-76n3=0print(n1,type(n1))print(n2,type(n2))print(n3,type(n3))#整数可以表示为二进制，十进制，八进制，十六进制print(&#x27;十进制&#x27;,118)print(&#x27;二进制&#x27;,0b10101111) #二进制以0b开头print(&#x27;八进制&#x27;,0o176) #八进制以0o开头print(&#x27;十六进制&#x27;,0x1EAF) 1234567891011# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03a=3.14159print(a,type(a))n1=1.1n2=2.2n3=2.1print(n1+n2)print(n1+n3)from decimal import Decimalprint(Decimal(&#x27;1.1&#x27;)+Decimal(&#x27;2.2&#x27;)) 12345678910# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03f1=Truef2=Falseprint(f1,type(f1))print(f2,type(f2))#布尔值可以转成整数计算print(f1+1) #2 1+1的结果为2 True表示1print(f2+1) #1 0+1的结果为1 False表示0 1234567891011121314# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03str1=&#x27;人生苦短，我用Python&#x27;str2=&quot;人生苦短, 我用Python&quot;str3=&quot;&quot;&quot;人生苦短，我用Python&quot;&quot;&quot;str4=&#x27;&#x27;&#x27;人生苦短，我用Python&#x27;&#x27;&#x27;print(str1,type(str1))print(str2,type(str2))print(str3,type(str3))print(str4,type(str4)) 12345678910111213141516171819202122232425262728293031323334353637383940414243# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03name=&#x27;张三&#x27;age=20print(type(name),type(age)) #说明name与age的数据类型不相同#print(&#x27;我叫&#x27;+name+&#x27;今年,&#x27;+age+&#x27;岁&#x27;) #当将str类型与int类型进行连接是，报错，解决方案，类型转换print(&#x27;我叫&#x27;+name+&#x27;今年,&#x27;+str(age)+&#x27;岁&#x27;) #将int类型通过str()函数转成了str类型print(&#x27;----------------str()将其它类型转成str类型--------&#x27;)a=10b=198.8c=Falseprint(type(a),type(b),type(c))print(str(a),str(b),str(c),type(str(a)),type(str(b)),type(str(c)))print(&#x27;-----------int()将其它的类型转int类型-----------&#x27;)s1=&#x27;128&#x27;f1=98.7s2=&#x27;76.77&#x27;ff=Trues3=&#x27;hello&#x27;print(type(s1),type(f1),type(s2),type(ff),type(s3))print(int(s1),type(int(s1))) #将str转成int类型，字符串为数字串print(int(f1),type(int(f1))) #float转成int类型，截取整数部分，舍掉小数部分#print(int(s2),type(int(s2))) #将str转成int类型，报错，因为字符串为小数串print(int(ff),type(int(ff)))#print(int(s3),type(int(s3))) #将str转成int类型时，字符串必须为数字串(整数),非数字串是不允许转换print(&#x27;---------------float()函数，其它数据类型转成float类型--------&#x27;)s1=&#x27;128.98&#x27;s2=&#x27;76&#x27;ff=Trues3=&#x27;hello&#x27;i=98print(type(s1),type(s2),type(ff),type(s3),type(i))print(float(s1),type(float(s1)))print(float(s2),type(float(s2)))print(float(ff),type(float(ff)))#print(float(s3),type(float(s3))) #字符串中的数据如果是非数字串，则不允许转换print(float(i),type(float(i))) 2.4Python中的注释 单行注释与多行注释： 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03#输入功能（单行注释）print(&#x27;hello&#x27;)&#x27;&#x27;&#x27;嘿嘿，我是多行注释&#x27;&#x27;&#x27; 中文编码声明注释： 1234#coding:UTF-8# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03 3.0第三章-算你赢3.1Python的输入函数input() 1234567# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03#输入函数inputpresent=input(&#x27;大圣想要什么礼物呢？&#x27;)print(present,type(present)) 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03#从键盘录入两个整数，计算两个整数的和a=int(input(&#x27;请输入一个加数:&#x27;))#a=int(a) #将转换之后的结果存储到a中b=int(input(&#x27;请输入另一个加数:&#x27;))#b=int(b)print(type(a),type(b))print(a+b) 3.2Python中的运算符 3.2.1算数运算符 123456789101112# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03print(1+1) # 加法运算符print(1-1) # 减法运算print(2*4) # 乘法运算print(1/2) # 除法运算print(11/2) # 除法运算print(11//2) # 整除运算print(11%2) # 去余运算print(2**2) # 表示的是2的2次方print(2**3) # 表示的是2的3次方 2*2*2 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/17 11:03print(9//4) #2print(-9//-4) #2print(9//-4) #-3print(-9//4) #-3 一正一负的整数公式，向下取整print(9%-4) # -3 公式 余数=被除数-除数*商 9-(-4)*(-3) 9-12--&gt; -3print(-9%4) # 3 -9-4*(-3) -9+12 --&gt; 3 3.2.2赋值运算符 12345678910111213141516171819202122232425262728293031323334353637# 作 者: 郭骏翔# 开发时间: 2022/3/18 14:31i=3+4print(i)a=b=c=20 #链式赋值print(a,id(a))print(b,id(b))print(c,id(c))print(&#x27;-----------支持参数赋值-----------&#x27;)a=20a+=30 #相当于a=a+30print(a)a-=10 #相当于a=a-10print(a)a*=2 #相当于a=a*2print(a) #intprint(type(a))a/=3print(a)print(type(a)) #floata//=2print(a)print(type(a))a%=3print(a)print(&#x27;--------------------解包赋值---------------&#x27;)a,b,c=20,30,40print(a,b,c)#a,b=20,30,40 报错，因为左右变量的个数和值的个数不对应print(&#x27;-------------交换两个变量的值------------&#x27;)a,b=10,20print(&#x27;交换之前:&#x27;,a,b)#交换a,b=b,aprint(&#x27;交换之后&#x27;,a,b) 3.2.3比较运算符 有10这个对象后不在进行创建，标识指向同样的位置。 123456789101112131415161718192021222324252627282930# 作 者: 郭骏翔# 开发时间: 2022/3/18 14:53#比较运算符 ,比较运算符的结果为bool类型a,b=10,20print(&#x27;a&gt;b吗&#x27;,a&gt;b) #Falseprint(&#x27;a&lt;b吗&#x27;,a&lt;b) #Trueprint(&#x27;a&lt;=b吗&#x27;,a&lt;=b) #Trueprint(&#x27;a&gt;=b吗？&#x27;,a&gt;=b) #Falseprint(&#x27;a==b吗？&#x27;,a==b) #Falseprint(&#x27;a!=b吗?&#x27;,a!=b) #True&#x27;&#x27;&#x27; 一个 = 称为赋值运算符 ，==称为比较运算符 一个变量由三部分组成，标识，类型，值 == 比较的是值还是标识呢？ 比较的是值 比较对象的标识使用 is&#x27;&#x27;&#x27;a=10b=10print(a==b) #True 说明，a与b的value 相等print(a is b) #True 说明，a与b的id标识，相等#以下代码没学过，后面会给大家讲解lst1=[11,22,33,44]lst2=[11,22,33,44]print(lst1==lst2) #value --&gt;Trueprint(lst1 is lst2) #id --Falseprint(id(lst1))print(id(lst2))print(a is not b) #False a的id与b的id是不相等的print(lst1 is not lst2) #True 3.2.4布尔运算符 12345678910111213141516171819202122232425262728# 作 者: 郭骏翔# 开发时间: 2022/3/18 15:13# 布尔运算符a,b=1,2print(&#x27;--------------------add 并且------------------&#x27;)print(a==1 and b==2) #True True and True--&gt;Trueprint(a==1 and b&lt;2) #False True and False --&gt;Falseprint(a!=1 and b==2) #False False and True--&gt;Falseprint(a!=1 and b!=2) #False False and False --&gt;Falseprint(&#x27;------------------or 或者----------------&#x27;)print(a==1 or b==2) #True or True --&gt;Trueprint(a==1 or b&lt;2) #True or False --&gt;Trueprint(a!=1 or b==2) #False or True --&gt;Trueprint(a!=1 or b!=2) #False or False --&gt;Falseprint(&#x27;-------------------------not 对bool类型操作数数取反-----------------------&#x27;)f=Truef2=Falseprint(not f)print(not f2)print(&#x27;-------------------------in 与not in-----------------&#x27;)s=&#x27;helloworld&#x27;print(&#x27;w&#x27; in s)print(&#x27;k&#x27; in s)print(&#x27;w&#x27; not in s) #Falseprint(&#x27;k&#x27; not in s) #True 3.2.5位运算符 12345# 作 者: 郭骏翔# 开发时间: 2022/3/18 15:28#按位与print(4&amp;8) #按位与&amp;，同为1时结果为1print(4|8) #按位或|，同为0时结果为0 12print(4&gt;&gt;1) #向右移动1位，相当于除以2print(4&gt;&gt;2) #向右移动2位，相当于除以4 3.2.6运算符的优先级 4.0第四章-往哪走呢?4.1程序的组织结构 4.2顺序结构 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/19 11:00#顺序结构&#x27;&#x27;&#x27;把大象装冰箱一共分几步&#x27;&#x27;&#x27;print(&#x27;-------------程序开始--------------&#x27;)print(&#x27;1.把冰箱门打开&#x27;)print(&#x27;2.把大象放冰箱里&#x27;)print(&#x27;3.把冰箱门关上&#x27;)print(&#x27;--------------程序结束----------------------&#x27;) 4.3对象的布尔值 12345678910111213141516171819202122# 作 者: 郭骏翔# 开发时间: 2022/3/19 12:58#测试对象的布尔值print(&#x27;------------------以下对象的布尔值为False----------------------&#x27;)print(bool(False)) #Falseprint(bool(0)) #Falseprint(bool(0.0)) #Falseprint(bool(None)) #Falseprint(bool(&#x27;&#x27;)) #Falseprint(bool(&quot;&quot;)) #Falseprint(bool([])) #空列表print(bool(list())) #空列表print(bool()) #空元组print(bool(tuple())) #空元组print(bool(&#123;&#125;)) #空字典print(bool(dict())) #空字典print(bool(set())) #空集合print(&#x27;----------------其它对象的布尔值均为True------------------------&#x27;)print(bool(18))print(bool(True))print(bool(&#x27;helloworld&#x27;)) 将对象放入条件表达式做判断（0&#x2F;1) 12345678# 作 者: 郭骏翔# 开发时间: 2022/3/19 14:52age=int(input(&#x27;请输入你的年龄:&#x27;))if age: print(age)else: print(&#x27;年龄为:&#x27;,age) 4.4分支结构 4.4.1单分支结构 12345678# 作 者: 郭骏翔# 开发时间: 2022/3/19 13:10money=1000 #余额s = int(input(&#x27;请输入取款金额&#x27;)) #取款金额if money&gt;=s: money=money-s print(&#x27;取款成功，余额为:&#x27;,money) 4.4.2多分支if…else结构 123456789101112# 作 者: 郭骏翔# 开发时间: 2022/3/19 13:17#双分支结构if...else,二选一执行&#x27;&#x27;&#x27;从键盘录入一个整数，编写程序让计算机判断是奇数还是偶数&#x27;&#x27;&#x27;num=int(input(&#x27;请输入一个整数: &#x27;))#条件判断if num%2==0: print(num,&#x27;是偶数&#x27;)else: print(num,&#x27;是奇数&#x27;) 4.4.3多分支if…elif…else结构 123456789101112131415161718192021222324252627282930313233343536373839404142# 作 者: 郭骏翔# 开发时间: 2022/3/19 13:34&#x27;&#x27;&#x27;多分支结构,多选一执行 从键盘录入一个整数 成绩 90-100 A 80-89 B 70-79 C 60-69 D 0-59 E 小于0或大于100 为非法数据（不是成绩的有限范围）&#x27;&#x27;&#x27;# score=int(input(&#x27;请输入一个成绩:&#x27;))# #判断# if score&gt;=90 and score&lt;=100:# print(&#x27;A级&#x27;)# elif score&gt;=80 and score&lt;=89:# print(&#x27;B级&#x27;)# elif score&gt;=70 and score&lt;=79:# print(&#x27;C级&#x27;)# elif score&gt;=60 and score&lt;=69:# print(&#x27;D级&#x27;)# elif score&gt;0 and score&lt;=59:# print(&#x27;E级&#x27;)# else:# print(&#x27;对不起，成绩有误，不在成绩的有效范围&#x27;)#python中特有的写法score=int(input(&#x27;请输入一个成绩:&#x27;))#判断if 90&lt;=score&lt;=100: print(&#x27;A级&#x27;)elif 80&lt;=score&lt;=89: print(&#x27;B级&#x27;)elif 70&lt;=score&lt;=79: print(&#x27;C级&#x27;)elif 60&lt;=score&lt;=69: print(&#x27;D级&#x27;)elif 0&lt;=score&lt;=59: print(&#x27;E级&#x27;)else: print(&#x27;对不起，成绩有误，不在成绩的有效范围&#x27;) 4.4.4if语句的嵌套 1234567891011121314151617181920212223# 作 者: 郭骏翔# 开发时间: 2022/3/19 14:03&#x27;&#x27;&#x27;会员 &gt;=200 8折 &gt;=100 9折 不打折 非会员 &gt;=200 9.5折 不打折&#x27;&#x27;&#x27;answer=input(&#x27;您是会员吗？y/n&#x27;)money=float(input(&#x27;请输入您的购物金额:&#x27;))#外层判断是否是会员if answer==&#x27;y&#x27; : #会员 if money&gt;=200: print(&#x27;打8折，付款金额为:&#x27;,money*0.8) elif money&gt;=100: print(&#x27;打9折，付款金额为:&#x27;,money*0.9) else: print(&#x27;不打折，付款金额为:&#x27;,money)else: #非会员 if money&gt;=200: print(&#x27;打9.5折,付款金额为:&#x27;,money*0.95) else: print(&#x27;不打折，付款金额为:&#x27;,money) 4.4.5条件表达式 1234567891011121314# 作 者: 郭骏翔# 开发时间: 2022/3/19 14:17&#x27;&#x27;&#x27;从键盘录入两个整数，比较两个整数的大小&#x27;&#x27;&#x27;num_a=int(input(&#x27;请输入第一个整数&#x27;))num_b=int(input(&#x27;请输入第二个整数&#x27;))#比较大小&#x27;&#x27;&#x27;if num_a&gt;=num_b: print(num_a,&#x27;大于等于&#x27;,num_b)else: print(num_a,&#x27;小于&#x27;,num_b)&#x27;&#x27;&#x27;print(&#x27;使用条件表达式进入比较&#x27;)print( str(num_a)+&#x27;大于等于&#x27;+str(num_b) if (num_a&gt;num_b) else str(num_a)+&#x27;小于&#x27;+str(num_b) ) 4.5pass空语句 12345678910# 作 者: 郭骏翔# 开发时间: 2022/3/19 14:48#pass语句，什么都不做，只是一个占位符，用到需要写语句的地方answer=input(&#x27;您是会员吗？y/n&#x27;)#判断是否是会员if answer==&#x27;y&#x27;: passelse: pass 5.0第五章-转圈圈5.1rang()函数的使用 1234567891011121314151617181920212223242526# 作 者: 郭骏翔# 开发时间: 2022/3/19 15:03#rang()的三种创建方式&#x27;&#x27;&#x27;第一种创建方式，只有一个参数(小括号中只给了一个数)&#x27;&#x27;&#x27;r=range(10) #[0,1,2,3,4,5,6,7,8,9],默认从0开始，默认相差1称为步长print(r) #range(0,10)print(list(r)) #用于查看range对象中的整数队列 --&gt;list是列表的意思&#x27;&#x27;&#x27;第二种创建方式，给了两个参数(小括号中给了两个数)&#x27;&#x27;&#x27;r=range(1,10) #指定了起始值，从1开始，到10结束（不包含10），默认步长为1print(list(r)) #[1,2,3,4,5,6,7,8,9]&#x27;&#x27;&#x27;第三种创建方式，给了三个参数(小括号中给了三个数)&#x27;&#x27;&#x27;r=range(1,10,2)print(list(r)) #[1,3,5,7,9]&#x27;&#x27;&#x27;判断指定的整数 在序列中是否存在 in ,not in&#x27;&#x27;&#x27;print(10 in r) #False ,10不在当前的r这个整数序列中print(9 in r) #True,9在当期的r这个序列中print(10 not in r) #Trueprint(9 not in r) #Falseprint(range(1,20,1)) #[1......19]print(range(1,101,1)) #[1......100] 5.2while循环 123456789101112131415161718192021# 作 者: 郭骏翔# 开发时间: 2022/3/20 11:09#计算0到4之间的累加和&#x27;&#x27;&#x27;4步循环法 1.初始化变量 2.条件判断 3.条件执行体（循环体） 4.改变变量 总结：初始化的变量与条件判断的变量与改变的变量为同一个&#x27;&#x27;&#x27;sum=0 #用于存储累加和&#x27;&#x27;&#x27;初始化变量为0&#x27;&#x27;&#x27;a=0&#x27;&#x27;&#x27;条件判断&#x27;&#x27;&#x27;while a&lt;5: &#x27;&#x27;&#x27;条件执行体(循环体)&#x27;&#x27;&#x27; sum+=a &#x27;&#x27;&#x27;改变变量&#x27;&#x27;&#x27; a+=1print(&#x27;和为&#x27;,sum) 12345678910111213141516# 作 者: 郭骏翔# 开发时间: 2022/3/20 12:35&#x27;&#x27;&#x27;计算1到100之间的偶数和&#x27;&#x27;&#x27;#print(bool(0))&#x27;&#x27;&#x27;初始化变量&#x27;&#x27;&#x27;sum=0 #用于存储偶数和a=1&#x27;&#x27;&#x27;条件判断&#x27;&#x27;&#x27;while a&lt;=100: &#x27;&#x27;&#x27;条件执行体（求和）&#x27;&#x27;&#x27; #条件判断是否是偶数 if not bool(a%2):#if a%2==0:#加上if not bool计算偶数和不加计算奇数和 sum+=a &#x27;&#x27;&#x27;改变变量&#x27;&#x27;&#x27; a+=1print(&#x27;1-100之间的偶数和&#x27;,sum) 5.3for-in循环 1234567891011121314151617181920# 作 者: 郭骏翔# 开发时间: 2022/3/20 12:45for item in &#x27;Python&#x27;: #第一次取出来的是P,将P赋值item，将item的值输出 print(item)#rang() 产生一个整数序列，--》也是一个可迭代对象for i in range(10): print(i)#如果在循环体中不需要使用到自定义变量，可将自定义变量写为&quot;_&quot;for _ in range(5): print(&#x27;人生苦短，我用Python&#x27;)print(&#x27;使用for循环，计算1到100之间的偶数和&#x27;)sum=0 #用于存储偶数和for item in range(1,101): if item %2==0: sum+=itemprint(&#x27;1,100之间的偶数和为:&#x27;,sum) 水仙花数 123456789101112131415# 作 者: 郭骏翔# 开发时间: 2022/3/20 13:05&#x27;&#x27;&#x27;输出100到999之间的水仙花数 举例： 153=3*3*3+5*5*5+1*1*1&#x27;&#x27;&#x27;for item in range(100,1000): ge=item%10 #个位 shi=item//10%10 #十位 bai=item//100 #百位 #print(bai,shi,ge) #判断 if ge**3+shi**3+bai**3==item: print(item) 5.4break、continue与else语句 for循环实现 12345678910# 作 者: 郭骏翔# 开发时间: 2022/3/20 13:34&#x27;&#x27;&#x27;从键盘录入密码，最多录入3次，如果正确就结束循环&#x27;&#x27;&#x27;for item in range(3): pwd=input(&#x27;请输入密码:&#x27;) if pwd ==&#x27;8888&#x27;: print(&#x27;密码正确&#x27;) breakelse: print(&#x27;密码不正确&#x27;) while循环实现 12345678910# 作 者: 郭骏翔# 开发时间: 2022/3/20 13:34&#x27;&#x27;&#x27;从键盘录入密码，最多录入3次，如果正确就结束循环&#x27;&#x27;&#x27;for item in range(3): pwd=input(&#x27;请输入密码:&#x27;) if pwd ==&#x27;8888&#x27;: print(&#x27;密码正确&#x27;) breakelse: print(&#x27;密码不正确&#x27;) 123456789101112131415161718# 作 者: 郭骏翔# 开发时间: 2022/3/20 13:52&#x27;&#x27;&#x27;要求输出1到50之间所有5的倍数， 5，10,15，20,25...... 5的倍数的共同点： 和5的余数为0的数都5的倍数 什么样的数不是5的倍数， 1,2,3,4,5,6,7,8,9.... 与5的余数不为0的数都不是5的倍数 要求是使用continue实现&#x27;&#x27;&#x27;for item in range(1,51): if item%5==0: print(item)print(&#x27;--------------------使用continue---------------&#x27;)for item in range(1,51): if item%5!=0: continue print(item) for循环实现 1234567891011# 作 者: 郭骏翔# 开发时间: 2022/3/20 14:13for item in range(3): pwd=input(&#x27;请输入密码:&#x27;) if pwd==&#x27;8888&#x27;: print(&#x27;密码正确&#x27;) break else: print(&#x27;密码不正确&#x27;)else: print(&#x27;对不起，三次密码均输入错误&#x27;) while循环实现 1234567891011121314# 作 者: 郭骏翔# 开发时间: 2022/3/20 14:17a=0while a&lt;3: pwd=input(&#x27;请输入密码&#x27;) if pwd==&#x27;8888&#x27;: print(&#x27;密码正确&#x27;) break else: print(&#x27;密码不正确&#x27;) &#x27;&#x27;&#x27;改变变量&#x27;&#x27;&#x27; a+=1else: print(&#x27;对不起，三次密码均输入错误&#x27;) 5.5嵌套循环 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/20 14:28&#x27;&#x27;&#x27;输出一个三行四列的矩形&#x27;&#x27;&#x27;for i in range(1,4): #表行数，执行三次，一次是一行 for j in range(1,5): print(&#x27;*&#x27;,end=&#x27;\\t&#x27;) #不换行输出 print() #换行 九九乘法表 123456# 作 者: 郭骏翔# 开发时间: 2022/3/20 14:38for i in range(1,10): #行数 for j in range(1,i+1): print(i,&#x27;*&#x27;,j,&#x27;=&#x27;,i*j,end=&#x27;\\t&#x27;) print() 12345678910# 作 者: 郭骏翔# 开发时间: 2022/3/20 14:51&#x27;&#x27;&#x27;流程控制语句break与continue在二重循环中的使用&#x27;&#x27;&#x27;for i in range(5): #代表外层循环要执行5次 for j in range(1,11): if j%2==0: #break continue print(j,end=&#x27;\\t&#x27;) print() 6.0第六章-一字排开6.1列表的创建与删除 1234567# 作 者: 郭骏翔# 开发时间: 2022/3/21 13:37a=10 #变量存储的是一个对象的引用lst=[&#x27;hello&#x27;,&#x27;world&#x27;,98]print(id(lst))print(type(lst))print(lst) 12345678910# 作 者: 郭骏翔# 开发时间: 2022/3/21 13:45&#x27;&#x27;&#x27;创建列表的第一种方式，使用[]&#x27;&#x27;&#x27;lst=[&#x27;hello&#x27;,&#x27;world&#x27;,98,&#x27;hello&#x27;]print(lst)print(lst[0],lst[-4])&#x27;&#x27;&#x27;创建列表的第二种方式，使用内置函数list&#x27;&#x27;&#x27;lst2=list([&#x27;hello&#x27;,&#x27;world&#x27;,98]) 6.2列表的查询操作 12345678# 作 者: 郭骏翔# 开发时间: 2022/3/21 15:12lst=[&#x27;hello&#x27;,&#x27;world&#x27;,98,&#x27;hello&#x27;]print(lst.index(&#x27;hello&#x27;)) #如果列表中有相同元素只返回相同元素的第一个索引#print(lst.index(&#x27;Python&#x27;)) #ValueError: &#x27;Python&#x27; is not in list#print(lst.index(&#x27;hello&#x27;,1,3)) #ValueError: &#x27;hello&#x27; is not in listprint(lst.index(&#x27;hello&#x27;,1,4)) #3 123456789101112# 作 者: 郭骏翔# 开发时间: 2022/3/21 15:26lst=[&#x27;hello&#x27;,&#x27;world&#x27;,98,&#x27;hello&#x27;,&#x27;world&#x27;,234]#获取索引为2的元素print(lst[2])#获取索引为-3的元素print(lst[-3])#获取索引为10的元素#print(lst[10]) #IndexError: list index out of range 1234567891011121314151617181920212223# 作 者: 郭骏翔# 开发时间: 2022/3/21 15:33lst=[10,20,30,40,50,60,70,80]#start=1,top=6,step1#print(lst[1:6:1])print(&#x27;原列表&#x27;,id(lst))lst2=lst[1:6:1]print(&#x27;切的片段:&#x27;,id(lst2))print(lst[1:6]) #默认步长为1print(lst[1:6:])#start=1,stop=6,step=2print(lst[1:6:2])#stop=6,step=2,start采用默认print(lst[:6:2])#start=1,step=2,stop采用默认print(lst[1::2])print(&#x27;----------step步长为负数的情况------------------&#x27;)print(&#x27;原列表:&#x27;,lst)print(lst[::-1])#start=7,stop 省略 step=-1print(lst[7::-1])#start=6,stop=0,step=-2print(lst[6:0:-2]) 1234567891011121314# 作 者: 郭骏翔# 开发时间: 2022/3/21 16:05print(&#x27;p&#x27; in &#x27;python&#x27;) #Trueprint(&#x27;k&#x27; not in &#x27;python&#x27;) #Truelst=[10,20,&#x27;python&#x27;,&#x27;hello&#x27;]print(10 in lst) #Trueprint(100 in lst) #Falseprint(10 not in lst) #Falseprint(100 not in lst) #Trueprint(&#x27;----------------------------------&#x27;)for item in lst: print(item) 6.3列表元素的增、删、改操作 123456789101112131415161718192021# 作 者: 郭骏翔# 开发时间: 2022/3/21 16:19#向列表的末尾添加一个元素lst=[10,20,30]print(&#x27;添加元素之前&#x27;,lst,id(lst))lst.append(100)print(&#x27;添加元素之后&#x27;,lst,id(lst))lst2=[&#x27;hello&#x27;,&#x27;world&#x27;]#lst.append(lst2) #将lst2作为一个元素添加到列表的末尾#lst.extend(lst2) #向列表的末尾一次性添加多个元素print(lst)#在任意位置上添加一个元素lst.insert(1,90)print(lst)lst3=[True,False,&#x27;hello&#x27;]#在任意的位置上添加N多个元素lst[1:]=lst3print(lst) 123456789101112131415161718192021222324252627282930# 作 者: 郭骏翔# 开发时间: 2022/3/22 22:35lst=[10,20,30,40,50,60,30]lst.remove(30) #从列表中移除一个元素，如果有重复元素只移第一个元素print(lst)#lst.remove(100) #ValueError: list.remove(x): x not in list#pop()跟据索引移除元素lst.pop(1)print(lst)#lst.pop(5) #IndexError: pop index out of range #如果索引的位置不存在，将抛出异常lst.pop() #如果不指定参数(索引),将删除列表中的最后一个元素print(lst)print(&#x27;------------------------切片操作-删除至少一个元素，将产生一个新的列表对象----------------&#x27;)new_list=lst[1:3]print(&#x27;原列表&#x27;,lst)print(&#x27;切片后的列表&#x27;,new_list)&#x27;&#x27;&#x27;&#x27;不产生新的列表对象，而是删除原列表中的内容&#x27;&#x27;&#x27;lst[1:3]=[]print(lst)&#x27;&#x27;&#x27;清除列表中的所有元素&#x27;&#x27;&#x27;lst.clear()print(lst)&#x27;&#x27;&#x27;del语句将列表对象删除&#x27;&#x27;&#x27;del lst#print(lst) #NameError: name &#x27;lst&#x27; is not defined 12345678# 作 者: 郭骏翔# 开发时间: 2022/3/23 22:31lst=[10,20,30,40]#一次修改一个值lst[2]=100print(lst)lst[1:3]=[300,400,500,600]print(lst) 6.4列表元素的排序 123456789101112131415161718192021222324# 作 者: 郭骏翔# 开发时间: 2022/3/23 22:45lst=[20,40,10,98,54]print(&#x27;排序前的列表&#x27;,lst,id(lst))#开始排序,调用列表对象的sort方法，升序排序lst.sort()print(&#x27;排序后的列表&#x27;,lst,id(lst))#通过指定关键字参数，将列表中的元素进行降序排序lst.sort(reverse=True) #reverse=True 表示降序排序，reverse=False就是升序排序print(lst)lst.sort(reverse=False)print(lst)print(&#x27;------------------使用内置函数sorted()对列表进行排序，将产生一个新的列表对象-----------------------------&#x27;)lst=[20,40,10,98,54]print(&#x27;原列表&#x27;,lst)#开始排序new_list=sorted(lst)print(lst)print(new_list)#指定关键字参数，实现列表元素的降序排序desc_list=sorted(lst,reverse=True)print(desc_list) 6.5列表推导式 12345678# 作 者: 郭骏翔# 开发时间: 2022/3/23 23:09lst=[i*i for i in range(1,10)]print(lst)&#x27;&#x27;&#x27;列表中的元素的值为2,4,6,8,10&#x27;&#x27;&#x27;lst2=[i*2 for i in range(1,6) ]print(lst2) 7.0第七章-夫妻站7.1什么是字典 列表 [] 字典 {} 7.2字典的原理 7.3字典的创建与删除 123456789101112131415# 作 者: 郭骏翔# 开发时间: 2022/3/24 13:46&#x27;&#x27;&#x27;字典的创建方式&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;使用&#123;&#125;创建字典&#x27;&#x27;&#x27;scores=&#123;&#x27;张三&#x27;:100,&#x27;李四&#x27;:98,&#x27;王五&#x27;:45&#125;print(scores)print(type(scores))&#x27;&#x27;&#x27;第二种创建dict()&#x27;&#x27;&#x27;student=dict(name=&#x27;jack&#x27;,age=20)print(student)&#x27;&#x27;&#x27;空字典&#x27;&#x27;&#x27;d=&#123;&#125;print(d) 7.4字典的查询操作 12345678910111213# 作 者: 郭骏翔# 开发时间: 2022/3/24 18:50&#x27;&#x27;&#x27;获取字典的元素&#x27;&#x27;&#x27;scores=&#123;&#x27;张三&#x27;:100,&#x27;李四&#x27;:98,&#x27;王五&#x27;:45&#125;&#x27;&#x27;&#x27;第一种方式，使用[]&#x27;&#x27;&#x27;print(scores[&#x27;张三&#x27;])#print(scores[&#x27;陈六&#x27;]) #KeyError: &#x27;陈六&#x27;&#x27;&#x27;&#x27;&#x27;第二种方式，使用get()方法&#x27;&#x27;&#x27;print(scores.get(&#x27;张三&#x27;))print(scores.get(&#x27;陈六&#x27;)) #Noneprint(scores.get(&#x27;麻七&#x27;,99)) #99是在查找&#x27;麻七&#x27;所对的value不存在时提供的一个默认值 7.5字典元素的增、删、改操作 12345678910111213141516# 作 者: 郭骏翔# 开发时间: 2022/3/24 19:01&#x27;&#x27;&#x27;key的判断&#x27;&#x27;&#x27;scores=&#123;&#x27;张三&#x27;:100,&#x27;李四&#x27;:98,&#x27;王五&#x27;:45&#125;print(&#x27;张三&#x27; in scores)print(&#x27;张三&#x27; not in scores)del scores[&#x27;张三&#x27;] #删除指定的key-value对#scores.clear() #清空字典的元素print(scores)scores[&#x27;陈六&#x27;]=98 #新增元素print(scores)scores[&#x27;陈六&#x27;]=100 #修改元素print(scores) 12345678910111213141516171819# 作 者: 郭骏翔# 开发时间: 2022/3/24 19:08scores=&#123;&#x27;张三&#x27;:100,&#x27;李四&#x27;:98,&#x27;王五&#x27;:45&#125;#获取所有的keykeys=scores.keys()print(keys)print(type(keys))print(list(keys)) #将所有的key组成的视图转成列表#获取所有valuevalues=scores.values()print(values)print(type(values))print(list(values))#获取所有的key-value对items=scores.items()print(items)print(list(items)) #转换之后的列表元素是由元组组成的（元组将在下个章节讲） 12345678# 作 者: 郭骏翔# 开发时间: 2022/3/24 19:30#字典元素的遍历scores=&#123;&#x27;张三&#x27;:100,&#x27;李四&#x27;:98,&#x27;王五&#x27;:45&#125;#字典元素的遍历for item in scores: print(item,scores[item],scores.get(item)) 1234567891011121314# 作 者: 郭骏翔# 开发时间: 2022/3/24 19:33d=&#123;&#x27;name&#x27;:&#x27;张三&#x27;,&#x27;name&#x27;:&#x27;李四&#x27;&#125; #key不允许重复print(d)d=&#123;&#x27;name&#x27;:&#x27;张三&#x27;,&#x27;nikename&#x27;:&#x27;张三&#x27;&#125; #value可以重复print(d)lst=[10,20,30]lst.insert(1,100)print(lst)#d=&#123;lst:100&#125;#print(d) 7.6字典的推导式 12345678# 作 者: 郭骏翔# 开发时间: 2022/3/24 20:40items=[&#x27;Fruits&#x27;,&#x27;Books&#x27;,&#x27;Others&#x27;]prices=[96,78,85,100,120]d=&#123; item.upper():prices for item ,prices in zip(items,prices) &#125;print(d) 第八章-是排还是散8.1什么是元组 1234567891011121314# 作 者: 郭骏翔# 开发时间: 2022/3/24 20:53&#x27;&#x27;&#x27;不可变序列，可变序列&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;可变序列: 列表，字典&#x27;&#x27;&#x27;lst=[10,20,45]print(id(lst))lst.append(300)print(id(lst))&#x27;&#x27;&#x27;不可变序列: 字符串，元组&#x27;&#x27;&#x27;s=&#x27;hello&#x27;print(id(s))s=s+&#x27;world&#x27;print(id(s))print(s) 8.2元组的创建方式 12345678910111213141516171819202122232425262728293031323334353637# 作 者: 郭骏翔# 开发时间: 2022/3/24 20:59&#x27;&#x27;&#x27;元组的创建方式&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;第一种，使用()&#x27;&#x27;&#x27;t=(&#x27;Python&#x27;,&#x27;world&#x27;,98)print(t)print(type(t))t2=&#x27;Python&#x27;,&#x27;world&#x27;,98 #省略了小括号print(t2)print(type(t2))t3=(&#x27;Python&#x27;,) #如果元组中只有一个元素，逗号不能省print(t3)print(type(t3))&#x27;&#x27;&#x27;第二种创建方式，使用内置函数tuple()&#x27;&#x27;&#x27;t1=tuple((&#x27;Python&#x27;,&#x27;world&#x27;,98))print(t1)print(type(t1))&#x27;&#x27;&#x27;空元组的创建方式&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;空列表的创建方式&#x27;&#x27;&#x27;lst=[]lst1=list()d=&#123;&#125;d2=dict()#空元组t4=()t5=tuple()print(&#x27;空列表&#x27;,lst,lst1)print(&#x27;空字典&#x27;,d,d2)print(&#x27;空元组&#x27;,t4,t5) 123456789101112131415# 作 者: 郭骏翔# 开发时间: 2022/3/24 21:15t=(10,[20,30],9)print(t)print(type(t))print(t[0],type(t[0]),id(t[0]))print(t[1],type(t[1]),id(t[1]))print(t[2],type(t[2]),id(t[2]))&#x27;&#x27;&#x27;尝试将t[1]修改为100&#x27;&#x27;&#x27;print(id(100))#t[1]=100 #元组是不允许修改元素的&#x27;&#x27;&#x27;由于[20][30]组成的是列表，而列表是可变序列，所以可以向列表中添加元素，而列表的内存地址不变&#x27;&#x27;&#x27;t[1].append(100) #向列表中添加元素print(t,id(t[1])) 8.3元组的遍历 1234567891011121314# 作 者: 郭骏翔# 开发时间: 2022/3/24 21:32&#x27;&#x27;&#x27;元组的遍历&#x27;&#x27;&#x27;t=(&#x27;Python&#x27;,&#x27;world&#x27;,98)&#x27;&#x27;&#x27;第一种获取元组元素的方式，使用索引&#x27;&#x27;&#x27;print(t[0])print(t[1])print(t[2])#print(t[3]) #IndexError: tuple index out of range&#x27;&#x27;&#x27;遍历元组&#x27;&#x27;&#x27;for item in t: print(item) 8.4什么是集合 8.5集合的创建 123456789101112131415161718192021222324252627282930# 作 者: 郭骏翔# 开发时间: 2022/3/24 21:39#集合的创建方式&#x27;&#x27;&#x27;第一种创建方式使用&#123;&#125;&#x27;&#x27;&#x27;s=&#123;2,3,4,5,5,6,6,7,7&#125; #集合中的元素不允许重复print(s)&#x27;&#x27;&#x27;第二种创建方式使用set()&#x27;&#x27;&#x27;s1=set(range(6))print(s1,type(s1))s2=set([1,2,4,5,5,5,6,6])print(s2,type(s2))s3=set((1,2,4,4,5,65)) #集合中的元素是无序的print(s3,type(s3))s4=set(&#x27;python&#x27;)print(s4,type(s4))s5=set(&#123;12,4,34,55,66,44,4&#125;)print(s5,type(s5))#定义一个空集合s6=&#123;&#125; #dict字典类型print(type(s6))s7=set()print(type(s7)) 8.6集合的增、删、改、查操作 12345678910111213141516171819202122232425262728293031323334# 作 者: 郭骏翔# 开发时间: 2022/3/24 21:52#集合的相关操作&#x27;&#x27;&#x27;集合元素的判断操作&#x27;&#x27;&#x27;s=&#123;10,20,30,405,60&#125;print(10 in s) #Trueprint(100 in s) #Falseprint(10 not in s) #Falseprint(100 not in s) #True&#x27;&#x27;&#x27;集合元素的新增操作&#x27;&#x27;&#x27;s.add(80) #add一次添加一个元素print(s)s.update(&#123;200,400,300&#125;) #一次至少添加一个元素print(s)s.update([100,99,8])s.update((78,64,56))print(s)&#x27;&#x27;&#x27;集合的删除操作&#x27;&#x27;&#x27;s.remove(100)print(s)#s.remove(500) #KeyError: 500s.discard(500)s.discard(300)print(s)s.pop()s.pop()#s.pop(400) #TypeError: set.pop() takes no arguments (1 given)print(s)s.clear()print(s) 1234567891011121314151617181920212223242526# 作 者: 郭骏翔# 开发时间: 2022/3/24 22:03&#x27;&#x27;&#x27;两个集合是否相等(元素相同，就相等）&#x27;&#x27;&#x27;s=&#123;10,20,30,40&#125;s2=&#123;30,40,20,10&#125;print(s==s2) #Trueprint(s!=s2) #False&#x27;&#x27;&#x27;一个集合是否是另一个集合的子集&#x27;&#x27;&#x27;s1=&#123;10,20,30,40,50,60&#125;s2=&#123;10,20,30,40&#125;s3=&#123;10,20,90&#125;print(s2.issubset(s1)) #Trueprint(s3.issubset(s1)) #False&#x27;&#x27;&#x27;一个集合是否是另一个集合的超集&#x27;&#x27;&#x27;print(s1.issuperset(s2)) #Trueprint(s1.issuperset(s3)) #False&#x27;&#x27;&#x27;两个集合是否没有交集&#x27;&#x27;&#x27;print(s2.isdisjoint(s3)) #False 有交集为Falses4=&#123;100,200,300&#125;print(s2.isdisjoint(s4)) #True 没有交集为True 123456789101112131415161718192021222324# 作 者: 郭骏翔# 开发时间: 2022/3/24 22:15#集合的数学操作#（1）交集s1=&#123;10,20,30,40&#125;s2=&#123;20,30,40,50,60&#125;print(s1.intersection(s2))print(s1 &amp; s2) #intersection()与 &amp; 等价， 交集操作print(s1)print(s2)#（2）并集操作print(s1.union(s2))print(s1 | s2) #union与 | 等价， 并集操作print(s1)print(s2)#（3）差集操作print(s1.difference(s2))print(s1-s2)print(s1)print(s2)#（3）对称差集print(s1.symmetric_difference(s2))print(s1 ^ s2) 8.7集合的生成 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/24 22:24#列表生成式lst=[ i*i for i in range(10)]print(lst)#集合生成式s=&#123; i*i for i in range(10)&#125;print(s) 第九章-一串连一串9.1字符串的驻留机制 123456# 作 者: 郭骏翔# 开发时间: 2022/3/24 23:00s1=&#x27;abc%&#x27;s2=&#x27;abc%&#x27;print(s1 is s2) 9.2字符串的常用操作 12345678910111213# 作 者: 郭骏翔# 开发时间: 2022/3/24 23:25#字符串的查询操作s=&#x27;hello,hello&#x27;print(s.index(&#x27;lo&#x27;)) #3print(s.find(&#x27;lo&#x27;)) #3print(s.rindex(&#x27;lo&#x27;)) #9print(s.rfind(&#x27;lo&#x27;)) #9#print(s.index(&#x27;k&#x27;)) #ValueError: substring not foundprint(s.find(&#x27;k&#x27;)) #-1#print(s.rindex(&#x27;k&#x27;)) #ValueError: substring not foundprint(s.rfind(&#x27;k&#x27;)) #-1 1234567891011121314151617# 作 者: 郭骏翔# 开发时间: 2022/3/24 23:34#字符串中的大小写转换的方法s=&#x27;hello,python&#x27;a=s.upper() #转换成大写自后，会产生一个新的字符串对象print(a,id(a))print(s,id(s))b=s.lower() #转换之后，会产生一个新的字符串对象print(b,id(b))print(s,id(s))print(b==s)print(b is s) #Falses2=&#x27;hello,Python&#x27;print(s2.swapcase())print(s2.capitalize())print(s2.title()) 123456789101112131415161718# 作 者: 郭骏翔# 开发时间: 2022/3/25 16:28s=&#x27;hello,Python&#x27;&#x27;&#x27;&#x27;居中对齐&#x27;&#x27;&#x27;print(s.center(20,&#x27;*&#x27;))&#x27;&#x27;&#x27;左对齐&#x27;&#x27;&#x27;print(s.ljust(20,&#x27;*&#x27;))print(s.ljust(10))print(s.ljust(20))&#x27;&#x27;&#x27;右对齐&#x27;&#x27;&#x27;print(s.rjust(20,&#x27;*&#x27;))print(s.rjust(20))print(s.rjust(10))&#x27;&#x27;&#x27;右对齐，使用0进行填充&#x27;&#x27;&#x27;print(s.zfill(20))print(s.zfill(10))print(&#x27;-8910&#x27;.zfill(8)) 123456789101112131415# 作 者: 郭骏翔# 开发时间: 2022/3/25 16:43s=&#x27;hello world Python&#x27;lst=s.split()print(lst)s1=&#x27;hello|world|Python&#x27;print(s1.split(sep=&#x27;|&#x27;))print(s1.split(sep=&#x27;|&#x27;,maxsplit=1))print(&#x27;-----------------------------&#x27;)&#x27;&#x27;&#x27;rsplit()从右侧开始劈分&#x27;&#x27;&#x27;print(s.rsplit())print(s1.rsplit(&#x27;|&#x27;))print(s1.rsplit(&#x27;|&#x27;,maxsplit=1)) 12345678910111213141516171819202122232425# 作 者: 郭骏翔# 开发时间: 2022/3/25 17:02s=&#x27;hello,python&#x27;print(&#x27;1.&#x27;,s.isidentifier())print(&#x27;2.&#x27;,&#x27;hello&#x27;.isidentifier()) #Falseprint(&#x27;3.&#x27;,&#x27;张三&#x27;.isidentifier()) #Trueprint(&#x27;4.&#x27;,&#x27;张三_123&#x27;.isidentifier()) #Trueprint(&#x27;5.&#x27;,&#x27;\\t&#x27;.isspace()) #Trueprint(&#x27;6.&#x27;,&#x27;abc&#x27;.isalpha()) #Trueprint(&#x27;7.&#x27;,&#x27;张三&#x27;.isalpha()) #Trueprint(&#x27;8.&#x27;,&#x27;张三1&#x27;.isalpha()) #Falseprint(&#x27;9.&#x27;,&#x27;123&#x27;.isdecimal()) #Trueprint(&#x27;10.&#x27;,&#x27;123四&#x27;.isdecimal()) #Falseprint(&#x27;11.&#x27;,&#x27;ⅡⅡⅡ&#x27;.isdecimal()) #Falseprint(&#x27;12.&#x27;,&#x27;123&#x27;.isnumeric()) #Trueprint(&#x27;13.&#x27;,&#x27;123四&#x27;.isnumeric()) #Trueprint(&#x27;14.&#x27;,&#x27;ⅡⅡⅡ&#x27;.isnumeric()) #Trueprint(&#x27;15.&#x27;,&#x27;abc1&#x27;.isalnum()) #Trueprint(&#x27;16.&#x27;,&#x27;张三123&#x27;.isalnum()) #Trueprint(&#x27;17.&#x27;,&#x27;abc!&#x27;.isalnum()) #False 12345678910111213141516# 作 者: 郭骏翔# 开发时间: 2022/3/25 17:23s=&#x27;hello,Python&#x27;print(s.replace(&#x27;Python&#x27;,&#x27;Java&#x27;))s1=&#x27;hello,Python,Python,Python&#x27;print(s1.replace(&#x27;Python&#x27;,&#x27;Java&#x27;,2))lst=[&#x27;hello&#x27;,&#x27;java&#x27;,&#x27;Python&#x27;]print(&#x27;|&#x27;.join(lst))print(&#x27;&#x27;.join(lst))t=(&#x27;hello&#x27;,&#x27;java&#x27;,&#x27;Python&#x27;)print(&#x27;&#x27;.join(t))print(&#x27;*&#x27;.join(&#x27;Python&#x27;)) 9.3字符串的比较 12345678910111213141516171819202122232425# 作 者: 郭骏翔# 开发时间: 2022/3/25 19:45print(&#x27;apple&#x27;&gt;&#x27;app&#x27;) #Trueprint(&#x27;apple&#x27;&gt;&#x27;banana&#x27;) #False ,相当于97&gt;98&gt;Falseprint(ord(&#x27;a&#x27;),ord(&#x27;b&#x27;))print(ord(&#x27;郭&#x27;))print(chr(97),chr(98))print(chr(37101))&#x27;&#x27;&#x27;== 与is的区别 == 比较的是value is 比较的是id是否相等&#x27;&#x27;&#x27;a=b=&#x27;Python&#x27;c=&#x27;Python&#x27;print(a==b)print(b==c)print(a is b) #Trueprint(a is c) #Trueprint(id(a))print(id(b))print(id(c)) 9.4字符串的切片操作 123456789101112131415161718192021222324# 作 者: 郭骏翔# 开发时间: 2022/3/25 20:12s=&#x27;hello,Python&#x27;s1=s[:5] #由于没有指定起始位置，所以从0开始切s2=s[6:] #由于没有指定结束位置，所以切到字符串的最后一个元素s3=&#x27;!&#x27;newstr=s1+s3+s2print(s1)print(s2)print(newstr)print(&#x27;----------------------&#x27;)print(id(s))print(id(s1))print(id(s2))print(id(s3))print(id(newstr))print(&#x27;---------------------[start:end:setp]--------------&#x27;)print(s[1:5:1]) #从1开始截到5(不包含5),步长为1print(s[::2]) #默认从0 开始，没有写结束，默认到字符串的最后一个元素，步长为2，两个元素之间的索引间隔为2print(s[::-1]) #默认从字符串的最后一个元素开始，到字符串的第一个元素结束，因为步长为负数print(s[-6::1]) #从索引为-6开始，到字符串的最后一个元素结束，步长为1 9.5格式化字符串 123456789101112131415# 作 者: 郭骏翔# 开发时间: 2022/3/25 23:10#格式化字符串#(1) % 占位符name=&#x27;张三&#x27;age=20print(&#x27;我叫%s,今年%d岁了&#x27; % (name,age))#(2) &#123;&#125;print(&#x27;我叫&#123;0&#125;,今年&#123;1&#125;岁&#x27;.format(name,age))#(3) f-stringprint(f&#x27;我叫&#123;name&#125;,今年&#123;age&#125;岁&#x27;) 1234567891011# 作 者: 郭骏翔# 开发时间: 2022/3/25 23:15print(&#x27;%10d&#x27; % 99) #10表示的是宽度print(&#x27;%.3f&#x27; % 3.1415926) #.3表示小数点后三位#同时表示宽度和精度print(&#x27;%10.3f&#x27; % 3.1415926) #一共总宽度为10,小数点后 3位print(&#x27;hellohello&#x27;) 1234567# 作 者: 郭骏翔# 开发时间: 2022/3/25 23:23print(&#x27;&#123;0:.3&#125;&#x27;.format(3.1415926)) #表示的素数一共是三位数print(&#x27;&#123;0:.3f&#125;&#x27;.format(3.1415926)) #.3f表示的是3位小数print(&#x27;&#123;:10.3f&#125;&#x27;.format(3.1415926)) #同时设置宽度和精度，一共是10位，3位是小数 9.6字符串的编码转换 123456789101112131415# 作 者: 郭骏翔# 开发时间: 2022/3/25 23:31s=&#x27;天涯共此时&#x27;#编码print(s.encode(encoding=&#x27;GBK&#x27;)) #在GBK这种编码格式中 一个中文占两个字节print(s.encode(encoding=&#x27;UTF-8&#x27;)) #在UTF-8这种编码格式中，一个中文占三个字节#解码#byte代表的就是一个二进制数据（字节类型数据）byte=s.encode(encoding=&#x27;GBK&#x27;) #编码print(byte.decode(encoding=&#x27;GBK&#x27;)) #解码byte=s.encode(encoding=&#x27;UTF-8&#x27;)print(byte.decode(encoding=&#x27;UTF-8&#x27;)) 第十章-水晶球不调用不动10.1函数的创建和调用 12345678# 作 者: 郭骏翔# 开发时间: 2022/3/26 17:03def calc(a,b): c=a+b return cresult=calc(10,20)print(result) 10.2函数的参数传递 1234567891011# 作 者: 郭骏翔# 开发时间: 2022/3/26 17:03def calc(a,b): #a,b称为形势参数，简称形参，形参的位置是在函数的定义处 a: 10 b: 20 c=a+b return cresult=calc(10,20) #10,20称为实际参数的值，简称实参，实参的位置是函数的调用处print(result)res=calc(b=10,a=20) # =d左侧的变量的名称称为 关键字参数print(res) 10.3函数的返回值 12345678910111213141516171819202122# 作 者: 郭骏翔# 开发时间: 2022/3/27 15:47def fun(arg1,arg2): print(&#x27;arg1&#x27;,arg1) print(&#x27;arg2&#x27;,arg2) arg1=100 arg2.append(10) print(&#x27;arg1&#x27;,arg1) print(&#x27;arg2&#x27;,arg2) #returnn1=11n2=[22,33,44]fun(n1,n2) #位置传参，arg1，arg2，是函数定义处的形参，n1,n2是函数调用处的实参，总结实参名称与形参名称可以不一致print(&#x27;n1&#x27;,n1)print(&#x27;n2&#x27;,n2)&#x27;&#x27;&#x27;在函数的调用过程中，进行参数的传递如果是不可变对象，在函数的修改不会影响实参的值 arg1的修改为100，不会影响n1的值如果是可变对象，在函数体内的修改会影响到实参的值 arg2的修改，append(10)，会影响到n2的值&#x27;&#x27;&#x27; 不可变(immutable)对象类型 int float decimal complex bool str tuple range frozenset bytes 可变(mutable)对象类型 list dict set bytearray user-defined classes (unless specifically made immutable) 12345678910111213141516171819202122232425262728293031323334353637383940414243# 作 者: 郭骏翔# 开发时间: 2022/3/27 16:08def fun(num): odd=[] #存奇数 even=[] #存偶数 for i in num: if i%2: odd.append(i) else: even.append(i) return odd,even#函数的调用lst=[10,29,34,23,44,53,55]fun(lst)print(fun(lst))&#x27;&#x27;&#x27;函数的返回值 (1)如果函数没有返回值【函数执行完毕之后，不需要给调用处提供数据】，return可以省略不写 (2)函数的返回值，如果是1个，直接返回原值 (3)函数的返回值，如果是多个，返回的结果为元组&#x27;&#x27;&#x27;def fun1(): print(&#x27;hello&#x27;) #returnfun1()def fun2(): return &#x27;hello&#x27;res=fun2()print(res)def fun3(): return &#x27;hello&#x27;,&#x27;world&#x27;print(fun3())&#x27;&#x27;&#x27;函数在定义时，是否需要返回值，视情况而定&#x27;&#x27;&#x27; 10.4函数的参数定义 123456789101112# 作 者: 郭骏翔# 开发时间: 2022/3/27 16:27def fun(a,b=10): #b称为默认值参数 print(a,b)#函数的调用fun(100)fun(20,30)print(&#x27;hello&#x27;,end=&#x27;\\t&#x27;)print(&#x27;world&#x27;) 1234567891011121314151617181920212223242526272829303132# 作 者: 郭骏翔# 开发时间: 2022/3/27 16:45def fun(*args): #函数定义时的 可变的位置参数 print(args) #print(args[0])fun(10)fun(10,30)fun(30,405,50)def fun1(**args): print(args)fun1(a=10)fun1(a=20,b=30,c=40)print(&#x27;hello&#x27;,&#x27;world&#x27;,&#x27;java&#x27;)&#x27;&#x27;&#x27;def fun2(*args,*a): pass 以上代码，程序会报错，个数可变的位置参数，只能是1个 def fun2(**args,**args): pass 以上代码，程序会报错，个数可变的关键字参数，只能是1个&#x27;&#x27;&#x27;def fun2(*args1,**args2): print()&#x27;&#x27;&#x27;def fun3(**args1,*args2): pass 在一个函数的定义过程中，既有个数可变的关键字形参，也有个数可变的位置形参，要求，个数可变的位置形参，放在个数可变的关键字形参之前&#x27;&#x27;&#x27; 1234567891011121314151617# 作 者: 郭骏翔# 开发时间: 2022/3/27 17:02def fun(a,b,c): #a,b,c在函数的定义处，所以是形式参数 print(&#x27;a=&#x27;,a) print(&#x27;b=&#x27;,b) print(&#x27;c=&#x27;,c)#函数的调用fun(10,20,30) #函数调用时的参数传递，称为位置传参lst=[11,22,33]fun(*lst) #在函数调用是，将列表中的每个元素都转换为位置实参传入fun(a=100,c=300,b=200) #函数的调用，所以是关键字实参dic=&#123;&#x27;a&#x27;:111,&#x27;b&#x27;:222,&#x27;c&#x27;:33&#125;fun(**dic) #在函数调用时，将字典中的键值对都转换为关键字实参传入 1234567891011121314151617181920212223242526272829303132333435# 作 者: 郭骏翔# 开发时间: 2022/3/27 19:48def fun(a,b=10): #b是在函数的定义处，所以b是形参，而且进行了赋值，所以b称为默认值形参 print(&#x27;a=&#x27;,a) print(&#x27;b=&#x27;,b)def fun2(*args): #个数可变的位置形参 print(args)def fun3(**args2): #个数可变的关键字形参 print(args2)fun2(10,20,30,40)fun3(a=11,b=22,c=33,d=44,e=55)def fun4(a,b,*,c,d): #从*之后的参数，在函数调用时，只能采用关键字参数传递 print(&#x27;a=&#x27;,a) print(&#x27;b=&#x27;,b) print(&#x27;c=&#x27;,c) print(&#x27;d=&#x27;,d)#调用fun4函数#fun4(10,20,30,40) #位置实参传递fun4(a=10,b=20,c=30,d=40) #关键字实参传递fun4(10,20,c=30,d=40) #前两个参数，采用的是位置实参传递，而c，d采用的是关键字实参传递&#x27;&#x27;&#x27;需求， c，d只能采用关键字实参传递&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;函数定义时的形参的顺序问题&#x27;&#x27;&#x27;def fun5(a,b,*,c,d,**args): passdef fun6(*args,**args2): passdef fun7(a,b=10,*args,**args2): pass 10.5变量的作用域 1234567891011121314151617181920212223# 作 者: 郭骏翔# 开发时间: 2022/3/27 20:11def fun(a,b): c=a+b #c,就称为局部变量，因为c是在函数体内定义的变量，a，b，为函数的形参，作用范围也是函数内部，相当于局部变量 print(c)#print(c) 因为a，c超出了起作用的范围（超出了作用域）#print(a)name=&#x27;杨老师&#x27; #name的作用范围为函数内部和外部都可以使用 --&gt; 称为全局变量print(name)def fun2(): print(name)#调用函数fun2()def fun3(): global age #函数内部定义的变量，局部变量，局部变量使用global声明，这个变量实际上就变成了全局变量 age=20 print(age)fun3()print(age) 10.6递归函数 1234567891011# 作 者: 郭骏翔# 开发时间: 2022/3/27 20:24def fac(n): if n==1: return 1 else: res = n*fac(n-1) return resprint(fac(6)) 斐波那契数列 123456789101112131415161718# 作 者: 郭骏翔# 开发时间: 2022/3/27 20:34def fib(n): if n==1: return 1 elif n==2: return 1 else: return fib(n-1)+fib(n-2)#斐波那契数列第6位上的数字print(fib(6))print(&#x27;------------------------------&#x27;)#输出这个数列的前6位上的数字for i in range(1,7): print(fib(i)) 第十一章-全民来找茬11.1Bug的由来及分类 11.2不同异常类型的处理方式 123456789101112# 作 者: 郭骏翔# 开发时间: 2022/3/27 21:15age=input(&#x27;请输入你的年龄&#x27;)print(type(age))if int(age)&gt;=18: print(&#x27;成年人，做事需要要负法律责任了&#x27;)i=0while i &lt; 10: print(i,end=&#x27;&#x27;) i+=1 123456789101112# 作 者: 郭骏翔# 开发时间: 2022/3/27 21:25lst=[11,22,33,44] #列表的索引是从0开始，#print(lst[4]print(lst[3])lst=[]#lst=append(&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;)lst.append(&#x27;A&#x27;)lst.append(&#x27;B&#x27;)lst.append(&#x27;C&#x27;)print(lst) 123456789101112131415161718192021222324252627# 作 者: 郭骏翔# 开发时间: 2022/3/27 21:32lst = [&#123;&#x27;rating&#x27;: [9.7, 2062397], &#x27;id&#x27;: &#x27;1292052&#x27;, &#x27;type&#x27;: [&#x27;犯罪&#x27;, &#x27;剧情&#x27;], &#x27;title&#x27;: &#x27;肖申克的救赎&#x27;, &#x27;actors&#x27;: [&#x27;蒂姆·罗宾斯&#x27;, &#x27;摩根·弗里曼&#x27;]&#125;, &#123;&#x27;rating&#x27;: [9.6, 1528760], &#x27;id&#x27;: &#x27;1291546&#x27;, &#x27;type&#x27;: [&#x27;剧情&#x27;, &#x27;爱情&#x27;, &#x27;同性&#x27;], &#x27;title&#x27;: &#x27;霸王别姬&#x27;, &#x27;actors&#x27;: [&#x27;张国荣&#x27;, &#x27;张丰毅&#x27;, &#x27;巩俐&#x27;, &#x27;葛优&#x27;]&#125;, &#123;&#x27;rating&#x27;: [9.5, 1559181], &#x27;id&#x27;: &#x27;1292720&#x27;, &#x27;type&#x27;: [&#x27;剧情&#x27;, &#x27;爱情&#x27;], &#x27;title&#x27;: &#x27;阿甘正传&#x27;, &#x27;actors&#x27;: [&#x27;汤姆·汉克斯&#x27;, &#x27;罗宾·怀特 &#x27;]&#125; ]name = input(&#x27;请输入你要查询的演员:&#x27;)for item in lst: # 遍历列表 --&gt;&#123;&#125; item是一个又一个的字典 act_lst = item[&#x27;actors&#x27;] for actor in act_lst: if name in actor: print(name, &#x27;出演了&#x27;, item[&#x27;title&#x27;]) &#x27;&#x27;&#x27; for movie in item: #遍历字典，得到movie 是一个字典中的key print(movie) print(&#x27;-----------------------&#x27;) actors=movie[&#x27;actors&#x27;] if name in actors: print(name+&#x27;出演了:&#x27;+movie) &#x27;&#x27;&#x27; 1234567# 作 者: 郭骏翔# 开发时间: 2022/3/27 22:00a=int(input(&#x27;请输入第一个整数&#x27;))b=int(input(&#x27;请输入第二个整数&#x27;))result=a/bprint(&#x27;结果为:&#x27;,result) 11.3异常处理机制 1234567891011# 作 者: 郭骏翔# 开发时间: 2022/3/27 22:08try: a=int(input(&#x27;请输入第一个整数&#x27;)) b=int(input(&#x27;请输入第二个整数&#x27;)) result=a/b print(&#x27;结果为:&#x27;,result)except ZeroDivisionError: print(&#x27;对不起，除数不允许为0&#x27;)print(&#x27;程序结束&#x27;) 123456789101112# 作 者: 郭骏翔# 开发时间: 2022/3/27 22:15try: a=int(input(&#x27;请输入第一个整数&#x27;)) b=int(input(&#x27;请输入第二个整数&#x27;)) result=a/b print(&#x27;结果为:&#x27;,result)except ZeroDivisionError: print(&#x27;对不起，除数不允许为0&#x27;)except ValueError: print(&#x27;只能输入数字串&#x27;)print(&#x27;程序结束&#x27;) 12345678910# 作 者: 郭骏翔# 开发时间: 2022/3/27 22:18try: a=int(input(&#x27;请输入第一个整数&#x27;)) b=int(input(&#x27;请输入第二个整数&#x27;)) result=a/bexcept BaseException as e: print(&#x27;出错了&#x27;,e)else: print(&#x27;计算结果为:&#x27;,result) 123456789101112# 作 者: 郭骏翔# 开发时间: 2022/3/27 22:24try: a=int(input(&#x27;请输入第一个整数&#x27;)) b=int(input(&#x27;请输入第二个整数&#x27;)) result=a/bexcept BaseException as e: print(&#x27;出错了&#x27;,e)else: print(&#x27;计算结果为:&#x27;,result)finally: print(&#x27;谢谢您的使用&#x27;) 1234567891011121314151617# 作 者: 郭骏翔# 开发时间: 2022/3/27 22:28#(1)数学运算异常# print(10/0) #ZeroDivisionError#(2)索引异常lst=[11,22,33,44]# print(lst[4]) #IndexError 索引从0开始dic=&#123;&#x27;name&#x27;:&#x27;张三&#x27;,&#x27;age&#x27;:20&#125;# print(dic[&#x27;gender&#x27;]) #KeyError# print(num) #NameError# int a=20 #SyntaxError# a=int(&#x27;hello&#x27;) #ValueError 12345678910# 作 者: 郭骏翔# 开发时间: 2022/3/27 22:39# print(10/0)import tracebacktry: print(&#x27;--------------------------------&#x27;) print(1/0)except: traceback.print_exc() 11.4Pycharm的调试模式 1234567# 作 者: 郭骏翔# 开发时间: 2022/3/27 22:44i=1while i&lt;=10: print(i) i+=1 第十二章-找对象不积极思想有问题12.1两大编程思想 12.2类和对象的创建 1234567891011121314151617181920212223# 作 者: 郭骏翔# 开发时间: 2022/3/27 23:17class Student: #Student为类的名称（类名）由一个或多个单词组成，每个单词的首字母大写，其余小写 native_pace=&#x27;福州&#x27; #直接写在类里的变量，称为类属性 def __init__(self,name,age): self.name=name #self.name 称为实例属性 ，进行了一个赋值的操作，将局部变量的name的值赋给实体属性 self.age=age #实例方法 def eat(self): print(&#x27;学生在吃饭...&#x27;) #静态方法 @staticmethod def method(): print(&#x27;我使用了staticmethod进行修饰，所以我是静态方法&#x27;) #类方法 @classmethod def cm(cls): print(&#x27;我是类方法，因为我使用了classmethod进行修饰&#x27;)#在类之外定义的称为函数，在类之内定义的称为方法def drink(): print(&#x27;喝水&#x27;) 1234567891011121314151617181920212223242526272829303132333435# 作 者: 郭骏翔# 开发时间: 2022/3/28 19:54# 作 者: 郭骏翔# 开发时间: 2022/3/27 23:17class Student: #Student为类的名称（类名）由一个或多个单词组成，每个单词的首字母大写，其余小写 native_pace=&#x27;福州&#x27; #直接写在类里的变量，称为类属性 def __init__(self,name,age): self.name=name #self.name 称为实例属性 ，进行了一个赋值的操作，将局部变量的name的值赋给实体属性 self.age=age #实例方法 def eat(self): print(&#x27;学生在吃饭...&#x27;) #静态方法 @staticmethod def method(): print(&#x27;我使用了staticmethod进行修饰，所以我是静态方法&#x27;) #类方法 @classmethod def cm(cls): print(&#x27;我是类方法，因为我使用了classmethod进行修饰&#x27;)#在类之外定义的称为函数，在类之内定义的称为方法def drink(): print(&#x27;喝水&#x27;)#创建Student类的对象stu1=Student(&#x27;张三&#x27;,20)print(id(stu1))print(type(stu1))print(stu1)print(&#x27;---------------&#x27;)print(id(Student)) #Student是类的名称print(type(Student))print(Student) 12345678910111213141516171819202122232425262728293031323334# 作 者: 郭骏翔# 开发时间: 2022/3/28 19:56class Student: #Student为类的名称（类名）由一个或多个单词组成，每个单词的首字母大写，其余小写 native_pace=&#x27;福州&#x27; #直接写在类里的变量，称为类属性 def __init__(self,name,age): self.name=name #self.name 称为实例属性 ，进行了一个赋值的操作，将局部变量的name的值赋给实体属性 self.age=age #实例方法 def eat(self): print(&#x27;学生在吃饭...&#x27;) #静态方法 @staticmethod def method(): print(&#x27;我使用了staticmethod进行修饰，所以我是静态方法&#x27;) #类方法 @classmethod def cm(cls): print(&#x27;我是类方法，因为我使用了classmethod进行修饰&#x27;)#在类之外定义的称为函数，在类之内定义的称为方法def drink(): print(&#x27;喝水&#x27;)#创建Student类的对象stu1=Student(&#x27;张三&#x27;,20)stu1.eat() #对象名.方法名()print(stu1.name)print(stu1.age)print(&#x27;---------------------------&#x27;)Student.eat(stu1) #33行与28行代码功能相同，都是调用Student中的eat方法 #类名.方法名(类的对象)--&gt;实际上就是方法定义处的self 12.3类对象与类属性 123456789101112131415161718192021222324252627282930313233343536# 作 者: 郭骏翔# 开发时间: 2022/3/28 20:07class Student: #Student为类的名称（类名）由一个或多个单词组成，每个单词的首字母大写，其余小写 native_pace=&#x27;福州&#x27; #直接写在类里的变量，称为类属性 def __init__(self,name,age): self.name=name #self.name 称为实例属性 ，进行了一个赋值的操作，将局部变量的name的值赋给实体属性 self.age=age #实例方法 def eat(self): print(&#x27;学生在吃饭...&#x27;) #静态方法 @staticmethod def method(): print(&#x27;我使用了staticmethod进行修饰，所以我是静态方法&#x27;) #类方法 @classmethod def cm(cls): print(&#x27;我是类方法，因为我使用了classmethod进行修饰&#x27;)#类属性的使用方法print(Student.native_pace)stu1=Student(&#x27;张三&#x27;,20)stu2=Student(&#x27;李四&#x27;,30)print(stu1.native_pace)print(stu2.native_pace)Student.native_pace=&#x27;天津&#x27;print(stu1.native_pace)print(stu2.native_pace)print(&#x27;------------类方法的使用方式--------------&#x27;)Student.cm()print(&#x27;------------静态方法的使用方式-------------&#x27;)Student.method() 12.4类方法与静态方法 1234567891011121314151617181920212223242526272829# 作 者: 郭骏翔# 开发时间: 2022/3/28 20:56class Student: def __init__(self,name,age): self.name=name self.age=age def eat(self): print(self.name+&#x27;在吃饭&#x27;)stu1=Student(&#x27;张三&#x27;,20)stu2=Student(&#x27;李四&#x27;,30)print(id(stu1))print(id(stu2))print(&#x27;---------------位stu2动态绑定性别属性-----------------------&#x27;)stu1.gender=&#x27;女&#x27;print(stu1.name,stu1.age,stu1.gender)# print(stu2.name,stu2.age,stu2.gender)print(stu2.name,stu2.age)print(&#x27;------------------------&#x27;)stu1.eat()stu2.eat()def show(): print(&#x27;定义在类之外的，称为函数&#x27;)stu1.show=showstu1.show()# stu2.show() #应为stu2并没有绑定show方法 第十三章-接着找对象13.1封装 12345678910111213# 作 者: 郭骏翔# 开发时间: 2022/3/28 21:36class Car: def __init__(self,brand): self.brand=brand def start(self): print(&#x27;汽车已启动&#x27;)car=Car(&#x27;宝马X5&#x27;)car.start()print(car.brand) 1234567891011121314151617# 作 者: 郭骏翔# 开发时间: 2022/3/28 21:41class Student: def __init__(self,name,age): self.name=name self.__age=age #年龄不希望在类的外部被使用，所以加了两个_ def show(self): print(self.name,self.__age)stu=Student(&#x27;张三&#x27;,20)stu.show()#在类的外部使用name与ageprint(stu.name)# print(stu.__age)print(dir(stu))print(stu._Student__age) #在类的外部可以通过 _Student__age 进行访问 13.2继承 123456789101112131415161718192021222324# 作 者: 郭骏翔# 开发时间: 2022/3/28 21:52class Person(object): #Person继承object类 def __init__(self,name,age): self.name=name self.age=age def info(self): print(self.name,self.age)class Student(Person): def __init__(self,name,age,stu_number): super().__init__(name,age) self.stu_number=stu_numberclass Teacher(Person): def __init__(self,name,age,teachofyear): super().__init__(name,age) self.teachofyear=teachofyearstu=Student(&#x27;张三&#x27;,20,1001)teacher=Teacher(&#x27;李四&#x27;,34,10)stu.info()teacher.info() 多继承 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/28 22:03class A(object): passclass B(object): passclass C(A,B): pass 13.3方法重写 1234567891011121314151617181920212223242526272829# 作 者: 郭骏翔# 开发时间: 2022/3/28 22:38class Person(object): #Person继承object类 def __init__(self,name,age): self.name=name self.age=age def info(self): print(self.name,self.age)class Student(Person): def __init__(self,name,age,stu_number): super().__init__(name,age) self.stu_number=stu_number def info(self): super().info() print(self.stu_number)class Teacher(Person): def __init__(self,name,age,teachofyear): super().__init__(name,age) self.teachofyear=teachofyear def info(self): super().info() print(&#x27;教龄&#x27;,self.teachofyear)stu=Student(&#x27;张三&#x27;,20,1001)teacher=Teacher(&#x27;李四&#x27;,34,10)stu.info()teacher.info() 13.4object类 12345678910111213# 作 者: 郭骏翔# 开发时间: 2022/3/28 22:47class Student: def __init__(self,name,age): self.name=name self.age=age def __str__(self): return &#x27;我的名字是&#123;0&#125;，今年&#123;1&#125;岁了&#x27;.format(self.name,self.age)stu=Student(&#x27;张三&#x27;,20)print(dir(stu))print(stu) #默认调用__str__()这样的方法 print(type(stu)) 13.5多态 12345678910111213141516171819202122232425# 作 者: 郭骏翔# 开发时间: 2022/3/28 22:55class Animal(object): def eat(self): print(&#x27;动物会吃&#x27;)class Dog(Animal): def eat(self): print(&#x27;狗吃骨头&#x27;)class Cat(Animal): def eat(self): print(&#x27;猫吃鱼&#x27;)class Person(object): def eat(self): print(&#x27;人吃五谷杂粮&#x27;)#定义一个函数def fun(obj): obj.eat()#开始调用函数fun(Cat())fun(Dog())fun(Animal())print(&#x27;---------------------------&#x27;)fun(Person()) 13.6特殊方法和特殊属性 123456789101112131415161718192021222324# 作 者: 郭骏翔# 开发时间: 2022/3/28 23:09# print(dir(object))class A: passclass B: passclass C(A,B): def __init__(self,name,age): self.name=name self.age=ageclass D(A): pass#创建C类对象x=C(&#x27;Jack&#x27;,20) #x是C类型的一个实例对象print(x.__dict__) #实例对象的属性字典print(C.__dict__)print(&#x27;----------------------&#x27;)print(x.__class__) #&lt;class &#x27;__main__.C&#x27;&gt; 输出了对象所属的类print(C.__bases__) #C类的父类类型的元组print(C.__base__) #类的基类print(C.__mro__) #类的层次结构print(A.__subclasses__()) #子类的列表 12345678910111213141516171819202122232425262728293031# 作 者: 郭骏翔# 开发时间: 2022/3/29 20:51a=20b=100c=a+b #两个整数类型的对象的相加操作d=a.__add__(b)print(c)print(d)class Student: def __init__(self,name): self.name=name def __add__(self, other): return self.name+other.name def __len__(self): return len(self.name) stu1=Student(&#x27;Jack&#x27;)stu2=Student(&#x27;李四&#x27;)s=stu1+stu2 #实现了两个对象的加法运算（因为在Student类中 编写__add__()特殊的方法）print(s)s=stu1.__add__(stu2)print(s)print(&#x27;---------------------------------&#x27;)lst=[11,22,33,44]print(len(lst)) #len是内置函数lenprint(lst.__len__())print(len(stu1)) 12345678910111213141516171819202122# 作 者: 郭骏翔# 开发时间: 2022/3/29 21:05class Person(object): def __new__(cls, *args, **kwargs): print(&#x27;__new__被调用执行了，cls的id值为&#123;0&#125;&#x27;,format(id(cls))) obj=super().__new__(cls) print(&#x27;创建的对象的id为:&#123;0&#125;&#x27;.format(id(obj))) return obj def __init__(self,name,age): print(&#x27;__init__被调用了，self的id值为:&#123;0&#125;&#x27;.format(id(self))) self.name=name self.age=ageprint(&#x27;object这个类对象的id为:&#123;0&#125;&#x27;.format(id(object)))print(&#x27;Person这个类对象的id为&#123;0&#125;&#x27;.format(id(Person)))#创建Person类的实例对象p1=Person(&#x27;张三&#x27;,20)print(&#x27;p1这个Person类的实例对象的id:&#123;0&#125;&#x27;.format(id(p1))) 变量的赋值操作 浅拷贝 1234567891011121314151617181920212223242526272829303132333435# 作 者: 郭骏翔# 开发时间: 2022/3/29 21:35class CPU: passclass Disk: passclass Computer: def __init__(self,cpu,disk): self.cpu=cpu self.disk=disk#(1)变量的赋值cpu1=CPU()cpu2=cpu1print(id(CPU))print(cpu1,id(cpu1))print(cpu2,id(cpu2))#(2)类的浅拷贝print(&#x27;-------------------------&#x27;)disk=Disk() #创建一个硬盘类的对象computer=Computer(cpu1,disk) #创建一个计算机类的对象#浅拷贝import copyprint(disk)computer2=copy.copy(computer)print(computer,computer.cpu,computer.disk)print(computer2,computer2.cpu,computer2.disk)#深拷贝computer3=copy.deepcopy(computer)print(computer,computer.cpu,computer.disk)print(computer3,computer3.cpu,computer3.disk) 第十四章-百宝箱14.1什么叫模块 12345678910111213141516171819202122# 作 者: 郭骏翔# 开发时间: 2022/3/30 13:03def fun(): passdef fun2(): passclass Student: native_place=&#x27;福州&#x27; #类属性 def eat(self,name,age): self.name=name self.age=age @classmethod def cm(cls): pass @staticmethod def sm(): passa=10b=20print(a+b) 14.2自定义模块 12345678910111213# 作 者: 郭骏翔# 开发时间: 2022/3/30 13:12import mathprint(id(math)) #关于数学运算print(type(math))print(math)print(math.pi)print(&#x27;----------------------------------------&#x27;)print(dir(math))print(math.pow(2,3),type(math.pow(2,3)))print(math.ceil(9.001))print(math.floor(9.9999)) 1234567891011# 作 者: 郭骏翔# 开发时间: 2022/3/30 13:17from math import pifrom math import powprint(pi)print(pow(2,3))&#x27;&#x27;&#x27;print(pow(2,3))print(math.pow(2,3))&#x27;&#x27;&#x27; 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/30 13:21# 自定义calc模块def add(a,b): return a+bdef div(a,b): return a/b#如何导入自定义模块 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/30 13:23#在demo5中导入calc自定义模块使用import calcprint(calc.add(10,20))print(calc.div(10,4)) 12345# 作 者: 郭骏翔# 开发时间: 2022/3/30 14:14from calc import addprint(add(10,20)) 14.3以自主程序的形式执行 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/30 14:26# 自定义calc2模块def add(a,b): return a+bif __name__ == &#x27;__main__&#x27;: print(add(10,20)) #只有当点击运行calc2时，才会执行运算 12345# 作 者: 郭骏翔# 开发时间: 2022/3/30 14:28import calc2print(calc2.add(100,200)) 14.4python中的包 123456# 作 者: 郭骏翔# 开发时间: 2022/3/30 14:36#在demo8的模块中导入 pageage1包import package1.module_A as ma #ma是package1.module_A这个模块的别名print(ma.a) 1234567891011# 作 者: 郭骏翔# 开发时间: 2022/3/30 15:08#导入带有包的模块时注意事项import package1import calc#使用import方式进行导入时，只能跟包名或模块名from package1 import module_Afrom package1.module_A import a#使用from...import可以导入包，模块，函数，变量 14.5第三方模块的安装及使用 123456789101112131415# 作 者: 郭骏翔# 开发时间: 2022/3/30 15:15import sysimport timeimport urllib.requestimport mathprint(sys.getsizeof(24))print(sys.getsizeof(45))print(sys.getsizeof(True))print(sys.getsizeof(False))print(time.time())print(time.localtime(time.time()))print(urllib.request.urlopen(&#x27;http://www.baidu.com&#x27;).read())print(math.pi) 123456789101112# 作 者: 郭骏翔# 开发时间: 2022/3/30 15:32import scheduleimport timedef job(): print(&#x27;哈哈 ----------&#x27;)schedule.every(3).seconds.do(job)while True: schedule.run_pending() time.sleep(1) 第十五章-大宝藏15.1编码格式介绍 记事本打开查看格式 1234# 作 者: 郭骏翔# 开发时间: 2022/3/30 19:57print(&#x27;你好,中国&#x27;) 12345#encoding=gbk# 作 者: 郭骏翔# 开发时间: 2022/3/30 20:00print(&#x27;你好，中国&#x27;) 15.2文件的读写原理 15.3文件读写操作 123456# 作 者: 郭骏翔# 开发时间: 2022/3/30 20:05file=open(&#x27;a.txt&#x27;,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;)print(file.readlines())file.close() 123#a.txt文件中国美丽 12345678910# 作 者: 郭骏翔# 开发时间: 2022/3/30 21:42src_file=open(&#x27;logo.png&#x27;,&#x27;rb&#x27;) #读二进制文件target_file=open(&#x27;copylogo.png&#x27;,&#x27;wb&#x27;)target_file.write(src_file.read())target_file.close()src_file.close() 15.4文件对象常用的方法 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/30 21:55file=open(&#x27;a.txt&#x27;,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;)#print(file.read(2))# print(file.readline())print(file.readlines())file.close() 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/30 22:01file=open(&#x27;c.txt&#x27;,&#x27;a&#x27;)# file.write(&#x27;hello&#x27;)lst=[&#x27;java&#x27;,&#x27;go&#x27;,&#x27;python&#x27;]file.writelines(lst)file.close() 12345678# 作 者: 郭骏翔# 开发时间: 2022/3/30 22:03file=open(&#x27;c.txt&#x27;,&#x27;r&#x27;)file.seek(2)print(file.read())print(file.tell())file.close() 12345678# 作 者: 郭骏翔# 开发时间: 2022/3/30 22:17file=open(&#x27;d.txt&#x27;,&#x27;a&#x27;)file.write(&#x27;hello&#x27;)file.flush()file.write(&#x27;world&#x27;)file.close() 15.5with语句(上下文管理器) 1234# 作 者: 郭骏翔# 开发时间: 2022/3/30 22:30with open(&#x27;a.txt&#x27;,&#x27;r&#x27;) as file: print(file.read()) 上下文管理器 1234567891011121314151617181920212223# 作 者: 郭骏翔# 开发时间: 2022/3/30 22:34&#x27;&#x27;&#x27;MyContentMgr实现了特殊方法__enter__().__exit__()称为该类对象遵守了上下文管理器协议该类对象的实例对象，称为上下文管理器MyCountentMgr()&#x27;&#x27;&#x27;class MyContentMgr(object): def __enter__(self): print(&#x27;enter方法被调用执行了&#x27;) return self def __exit__(self, exc_type, exc_val, exc_tb): print(&#x27;exit方法被调用执行了&#x27;) def show(self): print(&#x27;show方法被调用执行了&#x27;)with MyContentMgr() as file: #相当于file=MyContentMgr file.show() 123456# 作 者: 郭骏翔# 开发时间: 2022/3/30 22:43with open(&#x27;logo.png&#x27;,&#x27;rb&#x27;) as src_file: with open(&#x27;copy2logo.png&#x27;,&#x27;wb&#x27;) as target_file: target_file.write(src_file.read()) 15.6目录操作 123456789# 作 者: 郭骏翔# 开发时间: 2022/3/30 22:51#os模块与操作系统相关的一个模块import os# os.system(&#x27;notepad.exe&#x27;)# os.system(&#x27;calc.exe&#x27;)#直接调用可执行文件# os.startfile(&#x27;C:\\\\Program Files (x86)\\\\Tencent\\\\QQ\\\\Bin\\\\QQ.exe&#x27;) 123456789101112131415# 作 者: 郭骏翔# 开发时间: 2022/3/30 23:01import osprint(os.getcwd())list=os.listdir(&#x27;../chap15&#x27;)print(list)# os.mkdir(&#x27;newdir2&#x27;)# os.makedirs(&#x27;A/B/C&#x27;)# os.rmdir(&#x27;newdir2&#x27;)# os.removedirs(&#x27;A/B/C&#x27;)os.chdir(&#x27;D:\\\\python_study_new\\\\Python_Files\\\\Python_demo\\\\chap15&#x27;)print(os.getcwd()) 123456789101112# 作 者: 郭骏翔# 开发时间: 2022/3/30 23:12import os.pathprint(os.path.abspath(&#x27;demo13.py&#x27;))print(os.path.exists(&#x27;demo13.py&#x27;),os.path.exists(&#x27;demo18.py&#x27;))print(os.path.join(&#x27;D:\\\\python_study_new&#x27;,&#x27;demo13.py&#x27;))print(os.path.split(&#x27;D:\\\\python_study_new\\\\Python_Files\\\\Python_demo\\\\chap15\\\\demo13.py&#x27;))print(os.path.splitext(&#x27;demo13.py&#x27;))print(os.path.basename(&#x27;D:\\\\python_study_new\\\\Python_Files\\\\Python_demo\\\\chap15\\\\demo13.py&#x27;))print(os.path.dirname(&#x27;D:\\\\python_study_new\\\\Python_Files\\\\Python_demo\\\\chap15\\\\demo13.py&#x27;))print(os.path.isdir(&#x27;D:\\\\python_study_new\\\\Python_Files\\\\Python_demo\\\\chap15\\\\demo13.py&#x27;)) 12345678910# 作 者: 郭骏翔# 开发时间: 2022/3/30 23:22#列出指定目录下的所有py文件import ospath=os.getcwd()lst=os.listdir(path)for filename in lst: if filename.endswith(&#x27;.py&#x27;): print(filename) 12345678910111213141516# 作 者: 郭骏翔# 开发时间: 2022/3/30 23:28import ospath=os.getcwd()lst_files=os.walk(path)for dirpath,dirname,filename in lst_files: # print(dirpath) # print(dirname) # print(filename) # print(&#x27;--------------------&#x27;) for dir in dirname: print(os.path.join(dirpath,dir)) for file in filename: print(os.path.join(dirpath,file)) print(&#x27;----------------------------------&#x27;) 第十六章-学生信息管理系统16.1需求分析 16.2系统设计 16.3系统开发必备 16.4主函数设计 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263# 作 者: 郭骏翔# 开发时间: 2022/3/31 13:24def main(): while True: menum() choice=int(input(&#x27;请选择&#x27;)) if choice in [0,1,2,3,4,5,6,7]: if choice==0: answer=input(&#x27;您确定要退出系统吗?y/n&#x27;) if answer==&#x27;y&#x27; or answer==&#x27;Y&#x27;: print(&#x27;谢谢您的使用!!!&#x27;) break #退出系统 else: continue elif choice==1: insert() #录入学生信息 elif choice==2: search() elif choice==3: delete() elif choice==4: modify() elif choice==5: sort() elif choice==6: total() elif choice==7: show()def menum(): print(&#x27;=====================================学生信息管理系统======================================&#x27;) print(&#x27;----------------------------------------功能菜单-----------------------------------------&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t1.录入学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t2.查找学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t3.删除学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t4.修改学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t5.排序&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t7.显示所有学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t0.退出&#x27;) print(&#x27;----------------------------------------------------------------------------------------&#x27;)def insert(): passdef search(): passdef delete(): passdef modify(): passdef sort(): passdef total(): passdef show(): passif __name__ == &#x27;__main__&#x27;: main() 16.5学生信息维护模块设计 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899# 作 者: 郭骏翔# 开发时间: 2022/3/31 13:24filename=&#x27;student.txt&#x27;def main(): while True: menum() choice=int(input(&#x27;请选择&#x27;)) if choice in [0,1,2,3,4,5,6,7]: if choice==0: answer=input(&#x27;您确定要退出系统吗?y/n&#x27;) if answer==&#x27;y&#x27; or answer==&#x27;Y&#x27;: print(&#x27;谢谢您的使用!!!&#x27;) break #退出系统 else: continue elif choice==1: insert() #录入学生信息 elif choice==2: search() elif choice==3: delete() elif choice==4: modify() elif choice==5: sort() elif choice==6: total() elif choice==7: show()def menum(): print(&#x27;=====================================学生信息管理系统======================================&#x27;) print(&#x27;----------------------------------------功能菜单-----------------------------------------&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t1.录入学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t2.查找学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t3.删除学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t4.修改学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t5.排序&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t7.显示所有学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t0.退出&#x27;) print(&#x27;----------------------------------------------------------------------------------------&#x27;)def insert(): student_list=[] while True: id=input(&#x27;请输入ID(如1001):&#x27;) if not id: break name=input(&#x27;请输入姓名&#x27;) if not name: break try: english=int(input(&#x27;请输入英语成绩:&#x27;)) python=int(input(&#x27;请输入Python成绩:&#x27;)) java=int(input(&#x27;请输入Java成绩&#x27;)) except: print(&#x27;输入无效，不是整数类型，请重新输入&#x27;) continue #将录入的学生信息保存到字典中 student=&#123;&#x27;id&#x27;:id,&#x27;name&#x27;:name,&#x27;english&#x27;:english,&#x27;python&#x27;:python,&#x27;java&#x27;:java&#125; #将学生信息添加到列表中 student_list.append(student) answer=input(&#x27;是否继续添加？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: break #调用save()函数 save(student_list) print(&#x27;学生信息录入完毕&#x27;)def save(lst): try: stu_txt=open(filename,&#x27;a&#x27;,encoding=&#x27;utf-8&#x27;) except: stu_txt=open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) for item in lst: stu_txt.write(str(item)+&#x27;\\n&#x27;) stu_txt.close()def search(): passdef delete(): passdef modify(): passdef sort(): passdef total(): passdef show(): passif __name__ == &#x27;__main__&#x27;: main() 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131# 作 者: 郭骏翔# 开发时间: 2022/3/31 13:24import osfilename=&#x27;student.txt&#x27;def main(): while True: menum() choice=int(input(&#x27;请选择&#x27;)) if choice in [0,1,2,3,4,5,6,7]: if choice==0: answer=input(&#x27;您确定要退出系统吗?y/n&#x27;) if answer==&#x27;y&#x27; or answer==&#x27;Y&#x27;: print(&#x27;谢谢您的使用!!!&#x27;) break #退出系统 else: continue elif choice==1: insert() #录入学生信息 elif choice==2: search() elif choice==3: delete() elif choice==4: modify() elif choice==5: sort() elif choice==6: total() elif choice==7: show()def menum(): print(&#x27;=====================================学生信息管理系统======================================&#x27;) print(&#x27;----------------------------------------功能菜单-----------------------------------------&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t1.录入学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t2.查找学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t3.删除学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t4.修改学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t5.排序&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t7.显示所有学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t0.退出&#x27;) print(&#x27;----------------------------------------------------------------------------------------&#x27;)def insert(): student_list=[] while True: id=input(&#x27;请输入ID(如1001):&#x27;) if not id: break name=input(&#x27;请输入姓名&#x27;) if not name: break try: english=int(input(&#x27;请输入英语成绩:&#x27;)) python=int(input(&#x27;请输入Python成绩:&#x27;)) java=int(input(&#x27;请输入Java成绩&#x27;)) except: print(&#x27;输入无效，不是整数类型，请重新输入&#x27;) continue #将录入的学生信息保存到字典中 student=&#123;&#x27;id&#x27;:id,&#x27;name&#x27;:name,&#x27;english&#x27;:english,&#x27;python&#x27;:python,&#x27;java&#x27;:java&#125; #将学生信息添加到列表中 student_list.append(student) answer=input(&#x27;是否继续添加？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: break #调用save()函数 save(student_list) print(&#x27;学生信息录入完毕&#x27;)def save(lst): try: stu_txt=open(filename,&#x27;a&#x27;,encoding=&#x27;utf-8&#x27;) except: stu_txt=open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) for item in lst: stu_txt.write(str(item)+&#x27;\\n&#x27;) stu_txt.close()def search(): passdef delete(): while True: student_id=input(&#x27;请输入要删除的学生的ID:&#x27;) if student_id!=&#x27;&#x27;: if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as file: student_old=file.readlines() else: student_old=[] flag=False #标记是否删除 if student_old: with open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as wfile: d=&#123;&#125; for item in student_old: d=dict(eval(item)) #将字符串转成字典 if d[&#x27;id&#x27;]!=student_id: wfile.write(str(d)+&#x27;\\n&#x27;) else: flag=True if flag: print(f&#x27;id为&#123;student_id&#125;的学生信息已被删除&#x27;) else: print(f&#x27;没有找到ID为&#123;student_id&#125;的学生信息&#x27;) else: print(&#x27;无学生信息&#x27;) break show() #删除之后要重新显示所欲学生信息 answer=input(&#x27;是否继续删除？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: breakdef modify(): passdef sort(): passdef total(): passdef show(): passif __name__ == &#x27;__main__&#x27;: main() 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158# 作 者: 郭骏翔# 开发时间: 2022/3/31 13:24import osfilename=&#x27;student.txt&#x27;def main(): while True: menum() choice=int(input(&#x27;请选择&#x27;)) if choice in [0,1,2,3,4,5,6,7]: if choice==0: answer=input(&#x27;您确定要退出系统吗?y/n&#x27;) if answer==&#x27;y&#x27; or answer==&#x27;Y&#x27;: print(&#x27;谢谢您的使用!!!&#x27;) break #退出系统 else: continue elif choice==1: insert() #录入学生信息 elif choice==2: search() elif choice==3: delete() elif choice==4: modify() elif choice==5: sort() elif choice==6: total() elif choice==7: show()def menum(): print(&#x27;=====================================学生信息管理系统======================================&#x27;) print(&#x27;----------------------------------------功能菜单-----------------------------------------&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t1.录入学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t2.查找学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t3.删除学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t4.修改学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t5.排序&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t7.显示所有学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t0.退出&#x27;) print(&#x27;----------------------------------------------------------------------------------------&#x27;)def insert(): student_list=[] while True: id=input(&#x27;请输入ID(如1001):&#x27;) if not id: break name=input(&#x27;请输入姓名&#x27;) if not name: break try: english=int(input(&#x27;请输入英语成绩:&#x27;)) python=int(input(&#x27;请输入Python成绩:&#x27;)) java=int(input(&#x27;请输入Java成绩&#x27;)) except: print(&#x27;输入无效，不是整数类型，请重新输入&#x27;) continue #将录入的学生信息保存到字典中 student=&#123;&#x27;id&#x27;:id,&#x27;name&#x27;:name,&#x27;english&#x27;:english,&#x27;python&#x27;:python,&#x27;java&#x27;:java&#125; #将学生信息添加到列表中 student_list.append(student) answer=input(&#x27;是否继续添加？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: break #调用save()函数 save(student_list) print(&#x27;学生信息录入完毕&#x27;)def save(lst): try: stu_txt=open(filename,&#x27;a&#x27;,encoding=&#x27;utf-8&#x27;) except: stu_txt=open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) for item in lst: stu_txt.write(str(item)+&#x27;\\n&#x27;) stu_txt.close()def search(): passdef delete(): while True: student_id=input(&#x27;请输入要删除的学生的ID:&#x27;) if student_id!=&#x27;&#x27;: if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as file: student_old=file.readlines() else: student_old=[] flag=False #标记是否删除 if student_old: with open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as wfile: d=&#123;&#125; for item in student_old: d=dict(eval(item)) #将字符串转成字典 if d[&#x27;id&#x27;]!=student_id: wfile.write(str(d)+&#x27;\\n&#x27;) else: flag=True if flag: print(f&#x27;id为&#123;student_id&#125;的学生信息已被删除&#x27;) else: print(f&#x27;没有找到ID为&#123;student_id&#125;的学生信息&#x27;) else: print(&#x27;无学生信息&#x27;) break show() #删除之后要重新显示所欲学生信息 answer=input(&#x27;是否继续删除？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: breakdef modify(): show() if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: student_old=rfile.readlines() else: return student_id=input(&#x27;请输入要修改的学员ID:&#x27;) with open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as wfile: for item in student_old: print(item) d=dict(eval(item)) if d[&#x27;id&#x27;]==student_id: print(&#x27;找到学生信息，可以修改他的相关信息了！&#x27;) while True: try: d[&#x27;name&#x27;]=input(&#x27;请输入姓名&#x27;) d[&#x27;english&#x27;]=input(&#x27;请输入英语成绩&#x27;) d[&#x27;python&#x27;]=input(&#x27;请输入python成绩&#x27;) d[&#x27;java&#x27;]=input(&#x27;请输入java成绩&#x27;) break except: print(&#x27;您的输入有误，请重新输入！！！&#x27;) wfile.write(str(d)+&#x27;\\n&#x27;) print(&#x27;修改成功！！！&#x27;) else: wfile.write(str(d)+&#x27;\\n&#x27;) answer=input(&#x27;是否继续修改其它学生信息？y/n\\n&#x27;) if answer==&#x27;y&#x27;: modify()def sort(): passdef total(): passdef show(): passif __name__ == &#x27;__main__&#x27;: main() 16.6查询&#x2F;统计模块设计 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210# 作 者: 郭骏翔# 开发时间: 2022/3/31 13:24import osfilename=&#x27;student.txt&#x27;def main(): while True: menum() choice=int(input(&#x27;请选择&#x27;)) if choice in [0,1,2,3,4,5,6,7]: if choice==0: answer=input(&#x27;您确定要退出系统吗?y/n&#x27;) if answer==&#x27;y&#x27; or answer==&#x27;Y&#x27;: print(&#x27;谢谢您的使用!!!&#x27;) break #退出系统 else: continue elif choice==1: insert() #录入学生信息 elif choice==2: search() elif choice==3: delete() elif choice==4: modify() elif choice==5: sort() elif choice==6: total() elif choice==7: show()def menum(): print(&#x27;=====================================学生信息管理系统======================================&#x27;) print(&#x27;----------------------------------------功能菜单-----------------------------------------&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t1.录入学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t2.查找学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t3.删除学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t4.修改学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t5.排序&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t7.显示所有学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t0.退出&#x27;) print(&#x27;----------------------------------------------------------------------------------------&#x27;)def insert(): student_list=[] while True: id=input(&#x27;请输入ID(如1001):&#x27;) if not id: break name=input(&#x27;请输入姓名&#x27;) if not name: break try: english=int(input(&#x27;请输入英语成绩:&#x27;)) python=int(input(&#x27;请输入Python成绩:&#x27;)) java=int(input(&#x27;请输入Java成绩&#x27;)) except: print(&#x27;输入无效，不是整数类型，请重新输入&#x27;) continue #将录入的学生信息保存到字典中 student=&#123;&#x27;id&#x27;:id,&#x27;name&#x27;:name,&#x27;english&#x27;:english,&#x27;python&#x27;:python,&#x27;java&#x27;:java&#125; #将学生信息添加到列表中 student_list.append(student) answer=input(&#x27;是否继续添加？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: break #调用save()函数 save(student_list) print(&#x27;学生信息录入完毕&#x27;)def save(lst): try: stu_txt=open(filename,&#x27;a&#x27;,encoding=&#x27;utf-8&#x27;) except: stu_txt=open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) for item in lst: stu_txt.write(str(item)+&#x27;\\n&#x27;) stu_txt.close()def search(): student_query=[] while True: id=&#x27;&#x27; name=&#x27;&#x27; if os.path.exists(filename): mode=input(&#x27;按ID查找请输入1，按姓名查找请输入2：&#x27;) if mode==&#x27;1&#x27;: id=input(&#x27;请输入学生ID:&#x27;) elif mode==&#x27;2&#x27;: name=input(&#x27;请输入学生姓名:&#x27;) else: print(&#x27;您的输入有误，请重新输入&#x27;) search() with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: student=rfile.readlines() for item in student: d=dict(eval(item)) if id!=&#x27;&#x27;: if d[&#x27;id&#x27;]==id: student_query.append(d) elif name!=&#x27;&#x27;: if d[&#x27;name&#x27;]==name: student_query.append(d) print(student_query) #显示查询结果 show_student(student_query) #清空列表 student_query.clear() answer=input(&#x27;是否要继续查询？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: break else: print(&#x27;暂未保存学生信息&#x27;) returndef show_student(lst): if len(lst)==0: print(&#x27;没有查询到学生信息，无数据显示！！！&#x27;) return #定义标题显示格式 format_title=&#x27;&#123;:^6&#125;\\t&#123;:^12&#125;\\t&#123;:^8&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^8&#125;&#x27; print(format_title.format(&#x27;ID&#x27;,&#x27;姓名&#x27;,&#x27;英语成绩&#x27;,&#x27;Python成绩&#x27;,&#x27;Java成绩&#x27;,&#x27;总成绩&#x27;)) #定义内容的显示格式 format_data=&#x27;&#123;:^6&#125;\\t&#123;:^12&#125;\\t&#123;:^8&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^8&#125;&#x27; for item in lst: print(format_data.format(item.get(&#x27;id&#x27;), item.get(&#x27;name&#x27;), item.get(&#x27;english&#x27;), item.get(&#x27;python&#x27;), item.get(&#x27;java&#x27;), int(item.get(&#x27;english&#x27;))+int(item.get(&#x27;python&#x27;))+int(item.get(&#x27;java&#x27;)) ))def delete(): while True: student_id=input(&#x27;请输入要删除的学生的ID:&#x27;) if student_id!=&#x27;&#x27;: if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as file: student_old=file.readlines() else: student_old=[] flag=False #标记是否删除 if student_old: with open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as wfile: d=&#123;&#125; for item in student_old: d=dict(eval(item)) #将字符串转成字典 if d[&#x27;id&#x27;]!=student_id: wfile.write(str(d)+&#x27;\\n&#x27;) else: flag=True if flag: print(f&#x27;id为&#123;student_id&#125;的学生信息已被删除&#x27;) else: print(f&#x27;没有找到ID为&#123;student_id&#125;的学生信息&#x27;) else: print(&#x27;无学生信息&#x27;) break show() #删除之后要重新显示所欲学生信息 answer=input(&#x27;是否继续删除？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: breakdef modify(): show() if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: student_old=rfile.readlines() else: return student_id=input(&#x27;请输入要修改的学员ID:&#x27;) with open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as wfile: for item in student_old: print(item) d=dict(eval(item)) if d[&#x27;id&#x27;]==student_id: print(&#x27;找到学生信息，可以修改他的相关信息了！&#x27;) while True: try: d[&#x27;name&#x27;]=input(&#x27;请输入姓名&#x27;) d[&#x27;english&#x27;]=input(&#x27;请输入英语成绩&#x27;) d[&#x27;python&#x27;]=input(&#x27;请输入python成绩&#x27;) d[&#x27;java&#x27;]=input(&#x27;请输入java成绩&#x27;) break except: print(&#x27;您的输入有误，请重新输入！！！&#x27;) wfile.write(str(d)+&#x27;\\n&#x27;) print(&#x27;修改成功！！！&#x27;) else: wfile.write(str(d)+&#x27;\\n&#x27;) answer=input(&#x27;是否继续修改其它学生信息？y/n\\n&#x27;) if answer==&#x27;y&#x27;: modify()def sort(): passdef total(): passdef show(): passif __name__ == &#x27;__main__&#x27;: main() 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218# 作 者: 郭骏翔# 开发时间: 2022/3/31 13:24import osfilename=&#x27;student.txt&#x27;def main(): while True: menum() choice=int(input(&#x27;请选择&#x27;)) if choice in [0,1,2,3,4,5,6,7]: if choice==0: answer=input(&#x27;您确定要退出系统吗?y/n&#x27;) if answer==&#x27;y&#x27; or answer==&#x27;Y&#x27;: print(&#x27;谢谢您的使用!!!&#x27;) break #退出系统 else: continue elif choice==1: insert() #录入学生信息 elif choice==2: search() elif choice==3: delete() elif choice==4: modify() elif choice==5: sort() elif choice==6: total() elif choice==7: show()def menum(): print(&#x27;=====================================学生信息管理系统======================================&#x27;) print(&#x27;----------------------------------------功能菜单-----------------------------------------&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t1.录入学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t2.查找学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t3.删除学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t4.修改学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t5.排序&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t7.显示所有学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t0.退出&#x27;) print(&#x27;----------------------------------------------------------------------------------------&#x27;)def insert(): student_list=[] while True: id=input(&#x27;请输入ID(如1001):&#x27;) if not id: break name=input(&#x27;请输入姓名&#x27;) if not name: break try: english=int(input(&#x27;请输入英语成绩:&#x27;)) python=int(input(&#x27;请输入Python成绩:&#x27;)) java=int(input(&#x27;请输入Java成绩&#x27;)) except: print(&#x27;输入无效，不是整数类型，请重新输入&#x27;) continue #将录入的学生信息保存到字典中 student=&#123;&#x27;id&#x27;:id,&#x27;name&#x27;:name,&#x27;english&#x27;:english,&#x27;python&#x27;:python,&#x27;java&#x27;:java&#125; #将学生信息添加到列表中 student_list.append(student) answer=input(&#x27;是否继续添加？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: break #调用save()函数 save(student_list) print(&#x27;学生信息录入完毕&#x27;)def save(lst): try: stu_txt=open(filename,&#x27;a&#x27;,encoding=&#x27;utf-8&#x27;) except: stu_txt=open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) for item in lst: stu_txt.write(str(item)+&#x27;\\n&#x27;) stu_txt.close()def search(): student_query=[] while True: id=&#x27;&#x27; name=&#x27;&#x27; if os.path.exists(filename): mode=input(&#x27;按ID查找请输入1，按姓名查找请输入2：&#x27;) if mode==&#x27;1&#x27;: id=input(&#x27;请输入学生ID:&#x27;) elif mode==&#x27;2&#x27;: name=input(&#x27;请输入学生姓名:&#x27;) else: print(&#x27;您的输入有误，请重新输入&#x27;) search() with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: student=rfile.readlines() for item in student: d=dict(eval(item)) if id!=&#x27;&#x27;: if d[&#x27;id&#x27;]==id: student_query.append(d) elif name!=&#x27;&#x27;: if d[&#x27;name&#x27;]==name: student_query.append(d) print(student_query) #显示查询结果 show_student(student_query) #清空列表 student_query.clear() answer=input(&#x27;是否要继续查询？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: break else: print(&#x27;暂未保存学生信息&#x27;) returndef show_student(lst): if len(lst)==0: print(&#x27;没有查询到学生信息，无数据显示！！！&#x27;) return #定义标题显示格式 format_title=&#x27;&#123;:^6&#125;\\t&#123;:^12&#125;\\t&#123;:^8&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^8&#125;&#x27; print(format_title.format(&#x27;ID&#x27;,&#x27;姓名&#x27;,&#x27;英语成绩&#x27;,&#x27;Python成绩&#x27;,&#x27;Java成绩&#x27;,&#x27;总成绩&#x27;)) #定义内容的显示格式 format_data=&#x27;&#123;:^6&#125;\\t&#123;:^12&#125;\\t&#123;:^8&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^8&#125;&#x27; for item in lst: print(format_data.format(item.get(&#x27;id&#x27;), item.get(&#x27;name&#x27;), item.get(&#x27;english&#x27;), item.get(&#x27;python&#x27;), item.get(&#x27;java&#x27;), int(item.get(&#x27;english&#x27;))+int(item.get(&#x27;python&#x27;))+int(item.get(&#x27;java&#x27;)) ))def delete(): while True: student_id=input(&#x27;请输入要删除的学生的ID:&#x27;) if student_id!=&#x27;&#x27;: if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as file: student_old=file.readlines() else: student_old=[] flag=False #标记是否删除 if student_old: with open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as wfile: d=&#123;&#125; for item in student_old: d=dict(eval(item)) #将字符串转成字典 if d[&#x27;id&#x27;]!=student_id: wfile.write(str(d)+&#x27;\\n&#x27;) else: flag=True if flag: print(f&#x27;id为&#123;student_id&#125;的学生信息已被删除&#x27;) else: print(f&#x27;没有找到ID为&#123;student_id&#125;的学生信息&#x27;) else: print(&#x27;无学生信息&#x27;) break show() #删除之后要重新显示所欲学生信息 answer=input(&#x27;是否继续删除？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: breakdef modify(): show() if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: student_old=rfile.readlines() else: return student_id=input(&#x27;请输入要修改的学员ID:&#x27;) with open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as wfile: for item in student_old: print(item) d=dict(eval(item)) if d[&#x27;id&#x27;]==student_id: print(&#x27;找到学生信息，可以修改他的相关信息了！&#x27;) while True: try: d[&#x27;name&#x27;]=input(&#x27;请输入姓名&#x27;) d[&#x27;english&#x27;]=input(&#x27;请输入英语成绩&#x27;) d[&#x27;python&#x27;]=input(&#x27;请输入python成绩&#x27;) d[&#x27;java&#x27;]=input(&#x27;请输入java成绩&#x27;) break except: print(&#x27;您的输入有误，请重新输入！！！&#x27;) wfile.write(str(d)+&#x27;\\n&#x27;) print(&#x27;修改成功！！！&#x27;) else: wfile.write(str(d)+&#x27;\\n&#x27;) answer=input(&#x27;是否继续修改其它学生信息？y/n\\n&#x27;) if answer==&#x27;y&#x27;: modify()def sort(): passdef total(): if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: students=rfile.readlines() if students: print(f&#x27;一共有&#123;len(students)&#125;名学生&#x27;) else: print(&#x27;还没有录入学生信息&#x27;) else: print(&#x27;暂未保存数据信息......&#x27;)def show(): passif __name__ == &#x27;__main__&#x27;: main() 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228# 作 者: 郭骏翔# 开发时间: 2022/3/31 13:24import osfilename=&#x27;student.txt&#x27;def main(): while True: menum() choice=int(input(&#x27;请选择&#x27;)) if choice in [0,1,2,3,4,5,6,7]: if choice==0: answer=input(&#x27;您确定要退出系统吗?y/n&#x27;) if answer==&#x27;y&#x27; or answer==&#x27;Y&#x27;: print(&#x27;谢谢您的使用!!!&#x27;) break #退出系统 else: continue elif choice==1: insert() #录入学生信息 elif choice==2: search() elif choice==3: delete() elif choice==4: modify() elif choice==5: sort() elif choice==6: total() elif choice==7: show()def menum(): print(&#x27;=====================================学生信息管理系统======================================&#x27;) print(&#x27;----------------------------------------功能菜单-----------------------------------------&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t1.录入学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t2.查找学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t3.删除学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t4.修改学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t5.排序&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t7.显示所有学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t0.退出&#x27;) print(&#x27;----------------------------------------------------------------------------------------&#x27;)def insert(): student_list=[] while True: id=input(&#x27;请输入ID(如1001):&#x27;) if not id: break name=input(&#x27;请输入姓名&#x27;) if not name: break try: english=int(input(&#x27;请输入英语成绩:&#x27;)) python=int(input(&#x27;请输入Python成绩:&#x27;)) java=int(input(&#x27;请输入Java成绩&#x27;)) except: print(&#x27;输入无效，不是整数类型，请重新输入&#x27;) continue #将录入的学生信息保存到字典中 student=&#123;&#x27;id&#x27;:id,&#x27;name&#x27;:name,&#x27;english&#x27;:english,&#x27;python&#x27;:python,&#x27;java&#x27;:java&#125; #将学生信息添加到列表中 student_list.append(student) answer=input(&#x27;是否继续添加？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: break #调用save()函数 save(student_list) print(&#x27;学生信息录入完毕&#x27;)def save(lst): try: stu_txt=open(filename,&#x27;a&#x27;,encoding=&#x27;utf-8&#x27;) except: stu_txt=open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) for item in lst: stu_txt.write(str(item)+&#x27;\\n&#x27;) stu_txt.close()def search(): student_query=[] while True: id=&#x27;&#x27; name=&#x27;&#x27; if os.path.exists(filename): mode=input(&#x27;按ID查找请输入1，按姓名查找请输入2：&#x27;) if mode==&#x27;1&#x27;: id=input(&#x27;请输入学生ID:&#x27;) elif mode==&#x27;2&#x27;: name=input(&#x27;请输入学生姓名:&#x27;) else: print(&#x27;您的输入有误，请重新输入&#x27;) search() with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: student=rfile.readlines() for item in student: d=dict(eval(item)) if id!=&#x27;&#x27;: if d[&#x27;id&#x27;]==id: student_query.append(d) elif name!=&#x27;&#x27;: if d[&#x27;name&#x27;]==name: student_query.append(d) #显示查询结果 show_student(student_query) #清空列表 student_query.clear() answer=input(&#x27;是否要继续查询？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: break else: print(&#x27;暂未保存学生信息&#x27;) returndef show_student(lst): if len(lst)==0: print(&#x27;没有查询到学生信息，无数据显示！！！&#x27;) return #定义标题显示格式 format_title=&#x27;&#123;:^6&#125;\\t&#123;:^12&#125;\\t&#123;:^8&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^8&#125;&#x27; print(format_title.format(&#x27;ID&#x27;,&#x27;姓名&#x27;,&#x27;英语成绩&#x27;,&#x27;Python成绩&#x27;,&#x27;Java成绩&#x27;,&#x27;总成绩&#x27;)) #定义内容的显示格式 format_data=&#x27;&#123;:^6&#125;\\t&#123;:^12&#125;\\t&#123;:^8&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^8&#125;&#x27; for item in lst: print(format_data.format(item.get(&#x27;id&#x27;), item.get(&#x27;name&#x27;), item.get(&#x27;english&#x27;), item.get(&#x27;python&#x27;), item.get(&#x27;java&#x27;), int(item.get(&#x27;english&#x27;))+int(item.get(&#x27;python&#x27;))+int(item.get(&#x27;java&#x27;)) ))def delete(): while True: student_id=input(&#x27;请输入要删除的学生的ID:&#x27;) if student_id!=&#x27;&#x27;: if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as file: student_old=file.readlines() else: student_old=[] flag=False #标记是否删除 if student_old: with open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as wfile: d=&#123;&#125; for item in student_old: d=dict(eval(item)) #将字符串转成字典 if d[&#x27;id&#x27;]!=student_id: wfile.write(str(d)+&#x27;\\n&#x27;) else: flag=True if flag: print(f&#x27;id为&#123;student_id&#125;的学生信息已被删除&#x27;) else: print(f&#x27;没有找到ID为&#123;student_id&#125;的学生信息&#x27;) else: print(&#x27;无学生信息&#x27;) break show() #删除之后要重新显示所有学生信息 answer=input(&#x27;是否继续删除？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: breakdef modify(): show() if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: student_old=rfile.readlines() else: return student_id=input(&#x27;请输入要修改的学员ID:&#x27;) with open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as wfile: for item in student_old: print(item) d=dict(eval(item)) if d[&#x27;id&#x27;]==student_id: print(&#x27;找到学生信息，可以修改他的相关信息了！&#x27;) while True: try: d[&#x27;name&#x27;]=input(&#x27;请输入姓名&#x27;) d[&#x27;english&#x27;]=input(&#x27;请输入英语成绩&#x27;) d[&#x27;python&#x27;]=input(&#x27;请输入python成绩&#x27;) d[&#x27;java&#x27;]=input(&#x27;请输入java成绩&#x27;) break except: print(&#x27;您的输入有误，请重新输入！！！&#x27;) wfile.write(str(d)+&#x27;\\n&#x27;) print(&#x27;修改成功！！！&#x27;) else: wfile.write(str(d)+&#x27;\\n&#x27;) answer=input(&#x27;是否继续修改其它学生信息？y/n\\n&#x27;) if answer==&#x27;y&#x27;: modify()def sort(): passdef total(): if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: students=rfile.readlines() if students: print(f&#x27;一共有&#123;len(students)&#125;名学生&#x27;) else: print(&#x27;还没有录入学生信息&#x27;) else: print(&#x27;暂未保存数据信息......&#x27;)def show(): student_lit=[] if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: students=rfile.readlines() for item in students: student_lit.append(eval(item)) if student_lit: show_student(student_lit) else: print(&#x27;暂未保存过数据！！！&#x27;)if __name__ == &#x27;__main__&#x27;: main() 16.7排序模块设计 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256# 作 者: 郭骏翔# 开发时间: 2022/3/31 13:24import osfilename=&#x27;student.txt&#x27;def main(): while True: menum() choice=int(input(&#x27;请选择&#x27;)) if choice in [0,1,2,3,4,5,6,7]: if choice==0: answer=input(&#x27;您确定要退出系统吗?y/n&#x27;) if answer==&#x27;y&#x27; or answer==&#x27;Y&#x27;: print(&#x27;谢谢您的使用!!!&#x27;) break #退出系统 else: continue elif choice==1: insert() #录入学生信息 elif choice==2: search() elif choice==3: delete() elif choice==4: modify() elif choice==5: sort() elif choice==6: total() elif choice==7: show()def menum(): print(&#x27;=====================================学生信息管理系统======================================&#x27;) print(&#x27;----------------------------------------功能菜单-----------------------------------------&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t1.录入学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t2.查找学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t3.删除学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t4.修改学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t5.排序&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t7.显示所有学生信息&#x27;) print(&#x27;\\t\\t\\t\\t\\t\\t0.退出&#x27;) print(&#x27;----------------------------------------------------------------------------------------&#x27;)def insert(): student_list=[] while True: id=input(&#x27;请输入ID(如1001):&#x27;) if not id: break name=input(&#x27;请输入姓名&#x27;) if not name: break try: english=int(input(&#x27;请输入英语成绩:&#x27;)) python=int(input(&#x27;请输入Python成绩:&#x27;)) java=int(input(&#x27;请输入Java成绩&#x27;)) except: print(&#x27;输入无效，不是整数类型，请重新输入&#x27;) continue #将录入的学生信息保存到字典中 student=&#123;&#x27;id&#x27;:id,&#x27;name&#x27;:name,&#x27;english&#x27;:english,&#x27;python&#x27;:python,&#x27;java&#x27;:java&#125; #将学生信息添加到列表中 student_list.append(student) answer=input(&#x27;是否继续添加？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: break #调用save()函数 save(student_list) print(&#x27;学生信息录入完毕&#x27;)def save(lst): try: stu_txt=open(filename,&#x27;a&#x27;,encoding=&#x27;utf-8&#x27;) except: stu_txt=open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) for item in lst: stu_txt.write(str(item)+&#x27;\\n&#x27;) stu_txt.close()def search(): student_query=[] while True: id=&#x27;&#x27; name=&#x27;&#x27; if os.path.exists(filename): mode=input(&#x27;按ID查找请输入1，按姓名查找请输入2：&#x27;) if mode==&#x27;1&#x27;: id=input(&#x27;请输入学生ID:&#x27;) elif mode==&#x27;2&#x27;: name=input(&#x27;请输入学生姓名:&#x27;) else: print(&#x27;您的输入有误，请重新输入&#x27;) search() with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: student=rfile.readlines() for item in student: d=dict(eval(item)) if id!=&#x27;&#x27;: if d[&#x27;id&#x27;]==id: student_query.append(d) elif name!=&#x27;&#x27;: if d[&#x27;name&#x27;]==name: student_query.append(d) #显示查询结果 show_student(student_query) #清空列表 student_query.clear() answer=input(&#x27;是否要继续查询？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: break else: print(&#x27;暂未保存学生信息&#x27;) returndef show_student(lst): if len(lst)==0: print(&#x27;没有查询到学生信息，无数据显示！！！&#x27;) return #定义标题显示格式 format_title=&#x27;&#123;:^6&#125;\\t&#123;:^12&#125;\\t&#123;:^8&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^8&#125;&#x27; print(format_title.format(&#x27;ID&#x27;,&#x27;姓名&#x27;,&#x27;英语成绩&#x27;,&#x27;Python成绩&#x27;,&#x27;Java成绩&#x27;,&#x27;总成绩&#x27;)) #定义内容的显示格式 format_data=&#x27;&#123;:^6&#125;\\t&#123;:^12&#125;\\t&#123;:^8&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^8&#125;&#x27; for item in lst: print(format_data.format(item.get(&#x27;id&#x27;), item.get(&#x27;name&#x27;), item.get(&#x27;english&#x27;), item.get(&#x27;python&#x27;), item.get(&#x27;java&#x27;), int(item.get(&#x27;english&#x27;))+int(item.get(&#x27;python&#x27;))+int(item.get(&#x27;java&#x27;)) ))def delete(): while True: student_id=input(&#x27;请输入要删除的学生的ID:&#x27;) if student_id!=&#x27;&#x27;: if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as file: student_old=file.readlines() else: student_old=[] flag=False #标记是否删除 if student_old: with open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as wfile: d=&#123;&#125; for item in student_old: d=dict(eval(item)) #将字符串转成字典 if d[&#x27;id&#x27;]!=student_id: wfile.write(str(d)+&#x27;\\n&#x27;) else: flag=True if flag: print(f&#x27;id为&#123;student_id&#125;的学生信息已被删除&#x27;) else: print(f&#x27;没有找到ID为&#123;student_id&#125;的学生信息&#x27;) else: print(&#x27;无学生信息&#x27;) break show() #删除之后要重新显示所有学生信息 answer=input(&#x27;是否继续删除？y/n\\n&#x27;) if answer==&#x27;y&#x27;: continue else: breakdef modify(): show() if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: student_old=rfile.readlines() else: return student_id=input(&#x27;请输入要修改的学员ID:&#x27;) with open(filename,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as wfile: for item in student_old: print(item) d=dict(eval(item)) if d[&#x27;id&#x27;]==student_id: print(&#x27;找到学生信息，可以修改他的相关信息了！&#x27;) while True: try: d[&#x27;name&#x27;]=input(&#x27;请输入姓名&#x27;) d[&#x27;english&#x27;]=input(&#x27;请输入英语成绩&#x27;) d[&#x27;python&#x27;]=input(&#x27;请输入python成绩&#x27;) d[&#x27;java&#x27;]=input(&#x27;请输入java成绩&#x27;) break except: print(&#x27;您的输入有误，请重新输入！！！&#x27;) wfile.write(str(d)+&#x27;\\n&#x27;) print(&#x27;修改成功！！！&#x27;) else: wfile.write(str(d)+&#x27;\\n&#x27;) answer=input(&#x27;是否继续修改其它学生信息？y/n\\n&#x27;) if answer==&#x27;y&#x27;: modify()def sort(): show() if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: student_list=rfile.readlines() student_new=[] for item in student_list: student_new.append(eval(item)) else: return asc_or_desc=input(&#x27;请选择(0.升序 1.降序):&#x27;) if asc_or_desc==&#x27;0&#x27;: asc_or_desc_bool=False elif asc_or_desc==&#x27;1&#x27;: asc_or_desc_bool=True else: print(&#x27;您输入有误，请重新输入&#x27;) sort() mode=input(&#x27;请选择排序方式(1.按英语成绩排序 2.按Python成绩排序 3.按Java成绩排序 0.按照总成绩排序):&#x27;) if mode==&#x27;1&#x27;: student_new.sort(key=lambda x :int(x[&#x27;english&#x27;]),reverse=asc_or_desc_bool) elif mode==&#x27;2&#x27;: student_new.sort(key=lambda x :int(x[&#x27;python&#x27;]),reverse=asc_or_desc_bool) elif mode==&#x27;3&#x27;: student_new.sort(key=lambda x :int(x[&#x27;java&#x27;]),reverse=asc_or_desc_bool) elif mode==&#x27;0&#x27;: student_new.sort(key=lambda x :int(x[&#x27;english&#x27;])+int(x[&#x27;python&#x27;])+int(x[&#x27;java&#x27;]),reverse=asc_or_desc_bool) else: print(&#x27;您的输入有误，请重新输入！！！&#x27;) sort() show_student(student_new)def total(): if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: students=rfile.readlines() if students: print(f&#x27;一共有&#123;len(students)&#125;名学生&#x27;) else: print(&#x27;还没有录入学生信息&#x27;) else: print(&#x27;暂未保存数据信息......&#x27;)def show(): student_lit=[] if os.path.exists(filename): with open(filename,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as rfile: students=rfile.readlines() for item in students: student_lit.append(eval(item)) if student_lit: show_student(student_lit) else: print(&#x27;暂未保存过数据！！！&#x27;)if __name__ == &#x27;__main__&#x27;: main() 16.8项目打包 第十七章-实操案例17.1案例一 17.2案例二17.3","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-04-07T05:01:24.615Z","updated":"2022-04-03T13:20:13.101Z","comments":true,"path":"2022/04/07/hello-world/","link":"","permalink":"http://example.com/2022/04/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"demo1","slug":"demo1","date":"2022-04-03T13:53:41.000Z","updated":"2022-04-03T14:01:22.425Z","comments":true,"path":"2022/04/03/demo1/","link":"","permalink":"http://example.com/2022/04/03/demo1/","excerpt":"","text":"my first blog","categories":[],"tags":[]}],"categories":[],"tags":[]}